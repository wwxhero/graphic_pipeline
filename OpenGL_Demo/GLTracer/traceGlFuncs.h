typedef void (APIENTRY* FPglCullFace)(GLenum a_mode);
_GLTRACER_API void GLTrace_glCullFace(FPglCullFace proc, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFrontFace)(GLenum a_mode);
_GLTRACER_API void GLTrace_glFrontFace(FPglFrontFace proc, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglHint)(GLenum a_target, GLenum a_mode);
_GLTRACER_API void GLTrace_glHint(FPglHint proc, GLenum a_target, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglLineWidth)(GLfloat a_width);
_GLTRACER_API void GLTrace_glLineWidth(FPglLineWidth proc, GLfloat a_width, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPointSize)(GLfloat a_size);
_GLTRACER_API void GLTrace_glPointSize(FPglPointSize proc, GLfloat a_size, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPolygonMode)(GLenum a_face, GLenum a_mode);
_GLTRACER_API void GLTrace_glPolygonMode(FPglPolygonMode proc, GLenum a_face, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglScissor)(GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height);
_GLTRACER_API void GLTrace_glScissor(FPglScissor proc, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexParameterf)(GLenum a_target, GLenum a_pname, GLfloat a_param);
_GLTRACER_API void GLTrace_glTexParameterf(FPglTexParameterf proc, GLenum a_target, GLenum a_pname, GLfloat a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexParameterfv)(GLenum a_target, GLenum a_pname, const GLfloat * a_params);
_GLTRACER_API void GLTrace_glTexParameterfv(FPglTexParameterfv proc, GLenum a_target, GLenum a_pname, const GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexParameteri)(GLenum a_target, GLenum a_pname, GLint a_param);
_GLTRACER_API void GLTrace_glTexParameteri(FPglTexParameteri proc, GLenum a_target, GLenum a_pname, GLint a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexParameteriv)(GLenum a_target, GLenum a_pname, const GLint * a_params);
_GLTRACER_API void GLTrace_glTexParameteriv(FPglTexParameteriv proc, GLenum a_target, GLenum a_pname, const GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexImage1D)(GLenum a_target, GLint a_level, GLint a_internalformat, GLsizei a_width, GLint a_border, GLenum a_format, GLenum a_type, const GLvoid * a_pixels);
_GLTRACER_API void GLTrace_glTexImage1D(FPglTexImage1D proc, GLenum a_target, GLint a_level, GLint a_internalformat, GLsizei a_width, GLint a_border, GLenum a_format, GLenum a_type, const GLvoid * a_pixels, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexImage2D)(GLenum a_target, GLint a_level, GLint a_internalformat, GLsizei a_width, GLsizei a_height, GLint a_border, GLenum a_format, GLenum a_type, const GLvoid * a_pixels);
_GLTRACER_API void GLTrace_glTexImage2D(FPglTexImage2D proc, GLenum a_target, GLint a_level, GLint a_internalformat, GLsizei a_width, GLsizei a_height, GLint a_border, GLenum a_format, GLenum a_type, const GLvoid * a_pixels, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawBuffer)(GLenum a_mode);
_GLTRACER_API void GLTrace_glDrawBuffer(FPglDrawBuffer proc, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClear)(GLbitfield a_mask);
_GLTRACER_API void GLTrace_glClear(FPglClear proc, GLbitfield a_mask, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClearColor)(GLclampf a_red, GLclampf a_green, GLclampf a_blue, GLclampf a_alpha);
_GLTRACER_API void GLTrace_glClearColor(FPglClearColor proc, GLclampf a_red, GLclampf a_green, GLclampf a_blue, GLclampf a_alpha, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClearStencil)(GLint a_s);
_GLTRACER_API void GLTrace_glClearStencil(FPglClearStencil proc, GLint a_s, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClearDepth)(GLclampd a_depth);
_GLTRACER_API void GLTrace_glClearDepth(FPglClearDepth proc, GLclampd a_depth, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglStencilMask)(GLuint a_mask);
_GLTRACER_API void GLTrace_glStencilMask(FPglStencilMask proc, GLuint a_mask, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglColorMask)(GLboolean a_red, GLboolean a_green, GLboolean a_blue, GLboolean a_alpha);
_GLTRACER_API void GLTrace_glColorMask(FPglColorMask proc, GLboolean a_red, GLboolean a_green, GLboolean a_blue, GLboolean a_alpha, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDepthMask)(GLboolean a_flag);
_GLTRACER_API void GLTrace_glDepthMask(FPglDepthMask proc, GLboolean a_flag, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDisable)(GLenum a_cap);
_GLTRACER_API void GLTrace_glDisable(FPglDisable proc, GLenum a_cap, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglEnable)(GLenum a_cap);
_GLTRACER_API void GLTrace_glEnable(FPglEnable proc, GLenum a_cap, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFinish)();
_GLTRACER_API void GLTrace_glFinish(FPglFinish proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFlush)();
_GLTRACER_API void GLTrace_glFlush(FPglFlush proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendFunc)(GLenum a_sfactor, GLenum a_dfactor);
_GLTRACER_API void GLTrace_glBlendFunc(FPglBlendFunc proc, GLenum a_sfactor, GLenum a_dfactor, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglLogicOp)(GLenum a_opcode);
_GLTRACER_API void GLTrace_glLogicOp(FPglLogicOp proc, GLenum a_opcode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglStencilFunc)(GLenum a_func, GLint a_ref, GLuint a_mask);
_GLTRACER_API void GLTrace_glStencilFunc(FPglStencilFunc proc, GLenum a_func, GLint a_ref, GLuint a_mask, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglStencilOp)(GLenum a_fail, GLenum a_zfail, GLenum a_zpass);
_GLTRACER_API void GLTrace_glStencilOp(FPglStencilOp proc, GLenum a_fail, GLenum a_zfail, GLenum a_zpass, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDepthFunc)(GLenum a_func);
_GLTRACER_API void GLTrace_glDepthFunc(FPglDepthFunc proc, GLenum a_func, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPixelStoref)(GLenum a_pname, GLfloat a_param);
_GLTRACER_API void GLTrace_glPixelStoref(FPglPixelStoref proc, GLenum a_pname, GLfloat a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPixelStorei)(GLenum a_pname, GLint a_param);
_GLTRACER_API void GLTrace_glPixelStorei(FPglPixelStorei proc, GLenum a_pname, GLint a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglReadBuffer)(GLenum a_mode);
_GLTRACER_API void GLTrace_glReadBuffer(FPglReadBuffer proc, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglReadPixels)(GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, GLenum a_format, GLenum a_type, GLvoid * a_pixels);
_GLTRACER_API void GLTrace_glReadPixels(FPglReadPixels proc, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, GLenum a_format, GLenum a_type, GLvoid * a_pixels, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetBooleanv)(GLenum a_pname, GLboolean * a_params);
_GLTRACER_API void GLTrace_glGetBooleanv(FPglGetBooleanv proc, GLenum a_pname, GLboolean * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetDoublev)(GLenum a_pname, GLdouble * a_params);
_GLTRACER_API void GLTrace_glGetDoublev(FPglGetDoublev proc, GLenum a_pname, GLdouble * a_params, const char* fileName, unsigned int lineNum);
typedef GLenum (APIENTRY* FPglGetError)();
_GLTRACER_API GLenum GLTrace_glGetError(FPglGetError proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetFloatv)(GLenum a_pname, GLfloat * a_params);
_GLTRACER_API void GLTrace_glGetFloatv(FPglGetFloatv proc, GLenum a_pname, GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetIntegerv)(GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetIntegerv(FPglGetIntegerv proc, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef const GLubyte *  (APIENTRY* FPglGetString)(GLenum a_name);
_GLTRACER_API const GLubyte *  GLTrace_glGetString(FPglGetString proc, GLenum a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetTexImage)(GLenum a_target, GLint a_level, GLenum a_format, GLenum a_type, GLvoid * a_pixels);
_GLTRACER_API void GLTrace_glGetTexImage(FPglGetTexImage proc, GLenum a_target, GLint a_level, GLenum a_format, GLenum a_type, GLvoid * a_pixels, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetTexParameterfv)(GLenum a_target, GLenum a_pname, GLfloat * a_params);
_GLTRACER_API void GLTrace_glGetTexParameterfv(FPglGetTexParameterfv proc, GLenum a_target, GLenum a_pname, GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetTexParameteriv)(GLenum a_target, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetTexParameteriv(FPglGetTexParameteriv proc, GLenum a_target, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetTexLevelParameterfv)(GLenum a_target, GLint a_level, GLenum a_pname, GLfloat * a_params);
_GLTRACER_API void GLTrace_glGetTexLevelParameterfv(FPglGetTexLevelParameterfv proc, GLenum a_target, GLint a_level, GLenum a_pname, GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetTexLevelParameteriv)(GLenum a_target, GLint a_level, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetTexLevelParameteriv(FPglGetTexLevelParameteriv proc, GLenum a_target, GLint a_level, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsEnabled)(GLenum a_cap);
_GLTRACER_API GLboolean GLTrace_glIsEnabled(FPglIsEnabled proc, GLenum a_cap, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDepthRange)(GLclampd a_near, GLclampd a_far);
_GLTRACER_API void GLTrace_glDepthRange(FPglDepthRange proc, GLclampd a_near, GLclampd a_far, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglViewport)(GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height);
_GLTRACER_API void GLTrace_glViewport(FPglViewport proc, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawArrays)(GLenum a_mode, GLint a_first, GLsizei a_count);
_GLTRACER_API void GLTrace_glDrawArrays(FPglDrawArrays proc, GLenum a_mode, GLint a_first, GLsizei a_count, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawElements)(GLenum a_mode, GLsizei a_count, GLenum a_type, const GLvoid * a_indices);
_GLTRACER_API void GLTrace_glDrawElements(FPglDrawElements proc, GLenum a_mode, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetPointerv)(GLenum a_pname, GLvoid* * a_params);
_GLTRACER_API void GLTrace_glGetPointerv(FPglGetPointerv proc, GLenum a_pname, GLvoid* * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPolygonOffset)(GLfloat a_factor, GLfloat a_units);
_GLTRACER_API void GLTrace_glPolygonOffset(FPglPolygonOffset proc, GLfloat a_factor, GLfloat a_units, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCopyTexImage1D)(GLenum a_target, GLint a_level, GLenum a_internalformat, GLint a_x, GLint a_y, GLsizei a_width, GLint a_border);
_GLTRACER_API void GLTrace_glCopyTexImage1D(FPglCopyTexImage1D proc, GLenum a_target, GLint a_level, GLenum a_internalformat, GLint a_x, GLint a_y, GLsizei a_width, GLint a_border, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCopyTexImage2D)(GLenum a_target, GLint a_level, GLenum a_internalformat, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, GLint a_border);
_GLTRACER_API void GLTrace_glCopyTexImage2D(FPglCopyTexImage2D proc, GLenum a_target, GLint a_level, GLenum a_internalformat, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, GLint a_border, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCopyTexSubImage1D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_x, GLint a_y, GLsizei a_width);
_GLTRACER_API void GLTrace_glCopyTexSubImage1D(FPglCopyTexSubImage1D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_x, GLint a_y, GLsizei a_width, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCopyTexSubImage2D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height);
_GLTRACER_API void GLTrace_glCopyTexSubImage2D(FPglCopyTexSubImage2D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexSubImage1D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLsizei a_width, GLenum a_format, GLenum a_type, const GLvoid * a_pixels);
_GLTRACER_API void GLTrace_glTexSubImage1D(FPglTexSubImage1D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLsizei a_width, GLenum a_format, GLenum a_type, const GLvoid * a_pixels, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexSubImage2D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLsizei a_width, GLsizei a_height, GLenum a_format, GLenum a_type, const GLvoid * a_pixels);
_GLTRACER_API void GLTrace_glTexSubImage2D(FPglTexSubImage2D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLsizei a_width, GLsizei a_height, GLenum a_format, GLenum a_type, const GLvoid * a_pixels, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindTexture)(GLenum a_target, GLuint a_texture);
_GLTRACER_API void GLTrace_glBindTexture(FPglBindTexture proc, GLenum a_target, GLuint a_texture, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteTextures)(GLsizei a_n, const GLuint * a_textures);
_GLTRACER_API void GLTrace_glDeleteTextures(FPglDeleteTextures proc, GLsizei a_n, const GLuint * a_textures, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenTextures)(GLsizei a_n, GLuint * a_textures);
_GLTRACER_API void GLTrace_glGenTextures(FPglGenTextures proc, GLsizei a_n, GLuint * a_textures, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsTexture)(GLuint a_texture);
_GLTRACER_API GLboolean GLTrace_glIsTexture(FPglIsTexture proc, GLuint a_texture, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendColor)(GLclampf a_red, GLclampf a_green, GLclampf a_blue, GLclampf a_alpha);
_GLTRACER_API void GLTrace_glBlendColor(FPglBlendColor proc, GLclampf a_red, GLclampf a_green, GLclampf a_blue, GLclampf a_alpha, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendEquation)(GLenum a_mode);
_GLTRACER_API void GLTrace_glBlendEquation(FPglBlendEquation proc, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawRangeElements)(GLenum a_mode, GLuint a_start, GLuint a_end, GLsizei a_count, GLenum a_type, const GLvoid * a_indices);
_GLTRACER_API void GLTrace_glDrawRangeElements(FPglDrawRangeElements proc, GLenum a_mode, GLuint a_start, GLuint a_end, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexImage3D)(GLenum a_target, GLint a_level, GLint a_internalformat, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLint a_border, GLenum a_format, GLenum a_type, const GLvoid * a_pixels);
_GLTRACER_API void GLTrace_glTexImage3D(FPglTexImage3D proc, GLenum a_target, GLint a_level, GLint a_internalformat, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLint a_border, GLenum a_format, GLenum a_type, const GLvoid * a_pixels, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexSubImage3D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLint a_zoffset, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLenum a_format, GLenum a_type, const GLvoid * a_pixels);
_GLTRACER_API void GLTrace_glTexSubImage3D(FPglTexSubImage3D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLint a_zoffset, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLenum a_format, GLenum a_type, const GLvoid * a_pixels, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCopyTexSubImage3D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLint a_zoffset, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height);
_GLTRACER_API void GLTrace_glCopyTexSubImage3D(FPglCopyTexSubImage3D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLint a_zoffset, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglActiveTexture)(GLenum a_texture);
_GLTRACER_API void GLTrace_glActiveTexture(FPglActiveTexture proc, GLenum a_texture, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSampleCoverage)(GLclampf a_value, GLboolean a_invert);
_GLTRACER_API void GLTrace_glSampleCoverage(FPglSampleCoverage proc, GLclampf a_value, GLboolean a_invert, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCompressedTexImage3D)(GLenum a_target, GLint a_level, GLenum a_internalformat, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLint a_border, GLsizei a_imageSize, const GLvoid * a_data);
_GLTRACER_API void GLTrace_glCompressedTexImage3D(FPglCompressedTexImage3D proc, GLenum a_target, GLint a_level, GLenum a_internalformat, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLint a_border, GLsizei a_imageSize, const GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCompressedTexImage2D)(GLenum a_target, GLint a_level, GLenum a_internalformat, GLsizei a_width, GLsizei a_height, GLint a_border, GLsizei a_imageSize, const GLvoid * a_data);
_GLTRACER_API void GLTrace_glCompressedTexImage2D(FPglCompressedTexImage2D proc, GLenum a_target, GLint a_level, GLenum a_internalformat, GLsizei a_width, GLsizei a_height, GLint a_border, GLsizei a_imageSize, const GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCompressedTexImage1D)(GLenum a_target, GLint a_level, GLenum a_internalformat, GLsizei a_width, GLint a_border, GLsizei a_imageSize, const GLvoid * a_data);
_GLTRACER_API void GLTrace_glCompressedTexImage1D(FPglCompressedTexImage1D proc, GLenum a_target, GLint a_level, GLenum a_internalformat, GLsizei a_width, GLint a_border, GLsizei a_imageSize, const GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCompressedTexSubImage3D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLint a_zoffset, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLenum a_format, GLsizei a_imageSize, const GLvoid * a_data);
_GLTRACER_API void GLTrace_glCompressedTexSubImage3D(FPglCompressedTexSubImage3D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLint a_zoffset, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLenum a_format, GLsizei a_imageSize, const GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCompressedTexSubImage2D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLsizei a_width, GLsizei a_height, GLenum a_format, GLsizei a_imageSize, const GLvoid * a_data);
_GLTRACER_API void GLTrace_glCompressedTexSubImage2D(FPglCompressedTexSubImage2D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLint a_yoffset, GLsizei a_width, GLsizei a_height, GLenum a_format, GLsizei a_imageSize, const GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCompressedTexSubImage1D)(GLenum a_target, GLint a_level, GLint a_xoffset, GLsizei a_width, GLenum a_format, GLsizei a_imageSize, const GLvoid * a_data);
_GLTRACER_API void GLTrace_glCompressedTexSubImage1D(FPglCompressedTexSubImage1D proc, GLenum a_target, GLint a_level, GLint a_xoffset, GLsizei a_width, GLenum a_format, GLsizei a_imageSize, const GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetCompressedTexImage)(GLenum a_target, GLint a_level, GLvoid * a_img);
_GLTRACER_API void GLTrace_glGetCompressedTexImage(FPglGetCompressedTexImage proc, GLenum a_target, GLint a_level, GLvoid * a_img, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendFuncSeparate)(GLenum a_sfactorRGB, GLenum a_dfactorRGB, GLenum a_sfactorAlpha, GLenum a_dfactorAlpha);
_GLTRACER_API void GLTrace_glBlendFuncSeparate(FPglBlendFuncSeparate proc, GLenum a_sfactorRGB, GLenum a_dfactorRGB, GLenum a_sfactorAlpha, GLenum a_dfactorAlpha, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiDrawArrays)(GLenum a_mode, const GLint * a_first, const GLsizei * a_count, GLsizei a_primcount);
_GLTRACER_API void GLTrace_glMultiDrawArrays(FPglMultiDrawArrays proc, GLenum a_mode, const GLint * a_first, const GLsizei * a_count, GLsizei a_primcount, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiDrawElements)(GLenum a_mode, const GLsizei * a_count, GLenum a_type, const GLvoid* * a_indices, GLsizei a_primcount);
_GLTRACER_API void GLTrace_glMultiDrawElements(FPglMultiDrawElements proc, GLenum a_mode, const GLsizei * a_count, GLenum a_type, const GLvoid* * a_indices, GLsizei a_primcount, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPointParameterf)(GLenum a_pname, GLfloat a_param);
_GLTRACER_API void GLTrace_glPointParameterf(FPglPointParameterf proc, GLenum a_pname, GLfloat a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPointParameterfv)(GLenum a_pname, const GLfloat * a_params);
_GLTRACER_API void GLTrace_glPointParameterfv(FPglPointParameterfv proc, GLenum a_pname, const GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPointParameteri)(GLenum a_pname, GLint a_param);
_GLTRACER_API void GLTrace_glPointParameteri(FPglPointParameteri proc, GLenum a_pname, GLint a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPointParameteriv)(GLenum a_pname, const GLint * a_params);
_GLTRACER_API void GLTrace_glPointParameteriv(FPglPointParameteriv proc, GLenum a_pname, const GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenQueries)(GLsizei a_n, GLuint * a_ids);
_GLTRACER_API void GLTrace_glGenQueries(FPglGenQueries proc, GLsizei a_n, GLuint * a_ids, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteQueries)(GLsizei a_n, const GLuint * a_ids);
_GLTRACER_API void GLTrace_glDeleteQueries(FPglDeleteQueries proc, GLsizei a_n, const GLuint * a_ids, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsQuery)(GLuint a_id);
_GLTRACER_API GLboolean GLTrace_glIsQuery(FPglIsQuery proc, GLuint a_id, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBeginQuery)(GLenum a_target, GLuint a_id);
_GLTRACER_API void GLTrace_glBeginQuery(FPglBeginQuery proc, GLenum a_target, GLuint a_id, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglEndQuery)(GLenum a_target);
_GLTRACER_API void GLTrace_glEndQuery(FPglEndQuery proc, GLenum a_target, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetQueryiv)(GLenum a_target, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetQueryiv(FPglGetQueryiv proc, GLenum a_target, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetQueryObjectiv)(GLuint a_id, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetQueryObjectiv(FPglGetQueryObjectiv proc, GLuint a_id, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetQueryObjectuiv)(GLuint a_id, GLenum a_pname, GLuint * a_params);
_GLTRACER_API void GLTrace_glGetQueryObjectuiv(FPglGetQueryObjectuiv proc, GLuint a_id, GLenum a_pname, GLuint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindBuffer)(GLenum a_target, GLuint a_buffer);
_GLTRACER_API void GLTrace_glBindBuffer(FPglBindBuffer proc, GLenum a_target, GLuint a_buffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteBuffers)(GLsizei a_n, const GLuint * a_buffers);
_GLTRACER_API void GLTrace_glDeleteBuffers(FPglDeleteBuffers proc, GLsizei a_n, const GLuint * a_buffers, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenBuffers)(GLsizei a_n, GLuint * a_buffers);
_GLTRACER_API void GLTrace_glGenBuffers(FPglGenBuffers proc, GLsizei a_n, GLuint * a_buffers, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsBuffer)(GLuint a_buffer);
_GLTRACER_API GLboolean GLTrace_glIsBuffer(FPglIsBuffer proc, GLuint a_buffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBufferData)(GLenum a_target, GLsizeiptr a_size, const GLvoid * a_data, GLenum a_usage);
_GLTRACER_API void GLTrace_glBufferData(FPglBufferData proc, GLenum a_target, GLsizeiptr a_size, const GLvoid * a_data, GLenum a_usage, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBufferSubData)(GLenum a_target, GLintptr a_offset, GLsizeiptr a_size, const GLvoid * a_data);
_GLTRACER_API void GLTrace_glBufferSubData(FPglBufferSubData proc, GLenum a_target, GLintptr a_offset, GLsizeiptr a_size, const GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetBufferSubData)(GLenum a_target, GLintptr a_offset, GLsizeiptr a_size, GLvoid * a_data);
_GLTRACER_API void GLTrace_glGetBufferSubData(FPglGetBufferSubData proc, GLenum a_target, GLintptr a_offset, GLsizeiptr a_size, GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef GLvoid*  (APIENTRY* FPglMapBuffer)(GLenum a_target, GLenum a_access);
_GLTRACER_API GLvoid*  GLTrace_glMapBuffer(FPglMapBuffer proc, GLenum a_target, GLenum a_access, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglUnmapBuffer)(GLenum a_target);
_GLTRACER_API GLboolean GLTrace_glUnmapBuffer(FPglUnmapBuffer proc, GLenum a_target, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetBufferParameteriv)(GLenum a_target, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetBufferParameteriv(FPglGetBufferParameteriv proc, GLenum a_target, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetBufferPointerv)(GLenum a_target, GLenum a_pname, GLvoid* * a_params);
_GLTRACER_API void GLTrace_glGetBufferPointerv(FPglGetBufferPointerv proc, GLenum a_target, GLenum a_pname, GLvoid* * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendEquationSeparate)(GLenum a_modeRGB, GLenum a_modeAlpha);
_GLTRACER_API void GLTrace_glBlendEquationSeparate(FPglBlendEquationSeparate proc, GLenum a_modeRGB, GLenum a_modeAlpha, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawBuffers)(GLsizei a_n, const GLenum * a_bufs);
_GLTRACER_API void GLTrace_glDrawBuffers(FPglDrawBuffers proc, GLsizei a_n, const GLenum * a_bufs, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglStencilOpSeparate)(GLenum a_face, GLenum a_sfail, GLenum a_dpfail, GLenum a_dppass);
_GLTRACER_API void GLTrace_glStencilOpSeparate(FPglStencilOpSeparate proc, GLenum a_face, GLenum a_sfail, GLenum a_dpfail, GLenum a_dppass, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglStencilFuncSeparate)(GLenum a_face, GLenum a_func, GLint a_ref, GLuint a_mask);
_GLTRACER_API void GLTrace_glStencilFuncSeparate(FPglStencilFuncSeparate proc, GLenum a_face, GLenum a_func, GLint a_ref, GLuint a_mask, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglStencilMaskSeparate)(GLenum a_face, GLuint a_mask);
_GLTRACER_API void GLTrace_glStencilMaskSeparate(FPglStencilMaskSeparate proc, GLenum a_face, GLuint a_mask, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglAttachShader)(GLuint a_program, GLuint a_shader);
_GLTRACER_API void GLTrace_glAttachShader(FPglAttachShader proc, GLuint a_program, GLuint a_shader, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindAttribLocation)(GLuint a_program, GLuint a_index, const GLchar * a_name);
_GLTRACER_API void GLTrace_glBindAttribLocation(FPglBindAttribLocation proc, GLuint a_program, GLuint a_index, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCompileShader)(GLuint a_shader);
_GLTRACER_API void GLTrace_glCompileShader(FPglCompileShader proc, GLuint a_shader, const char* fileName, unsigned int lineNum);
typedef GLuint (APIENTRY* FPglCreateProgram)();
_GLTRACER_API GLuint GLTrace_glCreateProgram(FPglCreateProgram proc, const char* fileName, unsigned int lineNum);
typedef GLuint (APIENTRY* FPglCreateShader)(GLenum a_type);
_GLTRACER_API GLuint GLTrace_glCreateShader(FPglCreateShader proc, GLenum a_type, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteProgram)(GLuint a_program);
_GLTRACER_API void GLTrace_glDeleteProgram(FPglDeleteProgram proc, GLuint a_program, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteShader)(GLuint a_shader);
_GLTRACER_API void GLTrace_glDeleteShader(FPglDeleteShader proc, GLuint a_shader, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDetachShader)(GLuint a_program, GLuint a_shader);
_GLTRACER_API void GLTrace_glDetachShader(FPglDetachShader proc, GLuint a_program, GLuint a_shader, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDisableVertexAttribArray)(GLuint a_index);
_GLTRACER_API void GLTrace_glDisableVertexAttribArray(FPglDisableVertexAttribArray proc, GLuint a_index, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglEnableVertexAttribArray)(GLuint a_index);
_GLTRACER_API void GLTrace_glEnableVertexAttribArray(FPglEnableVertexAttribArray proc, GLuint a_index, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveAttrib)(GLuint a_program, GLuint a_index, GLsizei a_bufSize, GLsizei * a_length, GLint * a_size, GLenum * a_type, GLchar * a_name);
_GLTRACER_API void GLTrace_glGetActiveAttrib(FPglGetActiveAttrib proc, GLuint a_program, GLuint a_index, GLsizei a_bufSize, GLsizei * a_length, GLint * a_size, GLenum * a_type, GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveUniform)(GLuint a_program, GLuint a_index, GLsizei a_bufSize, GLsizei * a_length, GLint * a_size, GLenum * a_type, GLchar * a_name);
_GLTRACER_API void GLTrace_glGetActiveUniform(FPglGetActiveUniform proc, GLuint a_program, GLuint a_index, GLsizei a_bufSize, GLsizei * a_length, GLint * a_size, GLenum * a_type, GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetAttachedShaders)(GLuint a_program, GLsizei a_maxCount, GLsizei * a_count, GLuint * a_obj);
_GLTRACER_API void GLTrace_glGetAttachedShaders(FPglGetAttachedShaders proc, GLuint a_program, GLsizei a_maxCount, GLsizei * a_count, GLuint * a_obj, const char* fileName, unsigned int lineNum);
typedef GLint (APIENTRY* FPglGetAttribLocation)(GLuint a_program, const GLchar * a_name);
_GLTRACER_API GLint GLTrace_glGetAttribLocation(FPglGetAttribLocation proc, GLuint a_program, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetProgramiv)(GLuint a_program, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetProgramiv(FPglGetProgramiv proc, GLuint a_program, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetProgramInfoLog)(GLuint a_program, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_infoLog);
_GLTRACER_API void GLTrace_glGetProgramInfoLog(FPglGetProgramInfoLog proc, GLuint a_program, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_infoLog, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetShaderiv)(GLuint a_shader, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetShaderiv(FPglGetShaderiv proc, GLuint a_shader, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetShaderInfoLog)(GLuint a_shader, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_infoLog);
_GLTRACER_API void GLTrace_glGetShaderInfoLog(FPglGetShaderInfoLog proc, GLuint a_shader, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_infoLog, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetShaderSource)(GLuint a_shader, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_source);
_GLTRACER_API void GLTrace_glGetShaderSource(FPglGetShaderSource proc, GLuint a_shader, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_source, const char* fileName, unsigned int lineNum);
typedef GLint (APIENTRY* FPglGetUniformLocation)(GLuint a_program, const GLchar * a_name);
_GLTRACER_API GLint GLTrace_glGetUniformLocation(FPglGetUniformLocation proc, GLuint a_program, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetUniformfv)(GLuint a_program, GLint a_location, GLfloat * a_params);
_GLTRACER_API void GLTrace_glGetUniformfv(FPglGetUniformfv proc, GLuint a_program, GLint a_location, GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetUniformiv)(GLuint a_program, GLint a_location, GLint * a_params);
_GLTRACER_API void GLTrace_glGetUniformiv(FPglGetUniformiv proc, GLuint a_program, GLint a_location, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetVertexAttribdv)(GLuint a_index, GLenum a_pname, GLdouble * a_params);
_GLTRACER_API void GLTrace_glGetVertexAttribdv(FPglGetVertexAttribdv proc, GLuint a_index, GLenum a_pname, GLdouble * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetVertexAttribfv)(GLuint a_index, GLenum a_pname, GLfloat * a_params);
_GLTRACER_API void GLTrace_glGetVertexAttribfv(FPglGetVertexAttribfv proc, GLuint a_index, GLenum a_pname, GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetVertexAttribiv)(GLuint a_index, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetVertexAttribiv(FPglGetVertexAttribiv proc, GLuint a_index, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetVertexAttribPointerv)(GLuint a_index, GLenum a_pname, GLvoid* * a_pointer);
_GLTRACER_API void GLTrace_glGetVertexAttribPointerv(FPglGetVertexAttribPointerv proc, GLuint a_index, GLenum a_pname, GLvoid* * a_pointer, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsProgram)(GLuint a_program);
_GLTRACER_API GLboolean GLTrace_glIsProgram(FPglIsProgram proc, GLuint a_program, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsShader)(GLuint a_shader);
_GLTRACER_API GLboolean GLTrace_glIsShader(FPglIsShader proc, GLuint a_shader, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglLinkProgram)(GLuint a_program);
_GLTRACER_API void GLTrace_glLinkProgram(FPglLinkProgram proc, GLuint a_program, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglShaderSource)(GLuint a_shader, GLsizei a_count, const GLchar* * a_string, const GLint * a_length);
_GLTRACER_API void GLTrace_glShaderSource(FPglShaderSource proc, GLuint a_shader, GLsizei a_count, const GLchar* * a_string, const GLint * a_length, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUseProgram)(GLuint a_program);
_GLTRACER_API void GLTrace_glUseProgram(FPglUseProgram proc, GLuint a_program, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform1f)(GLint a_location, GLfloat a_v0);
_GLTRACER_API void GLTrace_glUniform1f(FPglUniform1f proc, GLint a_location, GLfloat a_v0, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform2f)(GLint a_location, GLfloat a_v0, GLfloat a_v1);
_GLTRACER_API void GLTrace_glUniform2f(FPglUniform2f proc, GLint a_location, GLfloat a_v0, GLfloat a_v1, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform3f)(GLint a_location, GLfloat a_v0, GLfloat a_v1, GLfloat a_v2);
_GLTRACER_API void GLTrace_glUniform3f(FPglUniform3f proc, GLint a_location, GLfloat a_v0, GLfloat a_v1, GLfloat a_v2, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform4f)(GLint a_location, GLfloat a_v0, GLfloat a_v1, GLfloat a_v2, GLfloat a_v3);
_GLTRACER_API void GLTrace_glUniform4f(FPglUniform4f proc, GLint a_location, GLfloat a_v0, GLfloat a_v1, GLfloat a_v2, GLfloat a_v3, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform1i)(GLint a_location, GLint a_v0);
_GLTRACER_API void GLTrace_glUniform1i(FPglUniform1i proc, GLint a_location, GLint a_v0, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform2i)(GLint a_location, GLint a_v0, GLint a_v1);
_GLTRACER_API void GLTrace_glUniform2i(FPglUniform2i proc, GLint a_location, GLint a_v0, GLint a_v1, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform3i)(GLint a_location, GLint a_v0, GLint a_v1, GLint a_v2);
_GLTRACER_API void GLTrace_glUniform3i(FPglUniform3i proc, GLint a_location, GLint a_v0, GLint a_v1, GLint a_v2, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform4i)(GLint a_location, GLint a_v0, GLint a_v1, GLint a_v2, GLint a_v3);
_GLTRACER_API void GLTrace_glUniform4i(FPglUniform4i proc, GLint a_location, GLint a_v0, GLint a_v1, GLint a_v2, GLint a_v3, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform1fv)(GLint a_location, GLsizei a_count, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniform1fv(FPglUniform1fv proc, GLint a_location, GLsizei a_count, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform2fv)(GLint a_location, GLsizei a_count, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniform2fv(FPglUniform2fv proc, GLint a_location, GLsizei a_count, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform3fv)(GLint a_location, GLsizei a_count, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniform3fv(FPglUniform3fv proc, GLint a_location, GLsizei a_count, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform4fv)(GLint a_location, GLsizei a_count, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniform4fv(FPglUniform4fv proc, GLint a_location, GLsizei a_count, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform1iv)(GLint a_location, GLsizei a_count, const GLint * a_value);
_GLTRACER_API void GLTrace_glUniform1iv(FPglUniform1iv proc, GLint a_location, GLsizei a_count, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform2iv)(GLint a_location, GLsizei a_count, const GLint * a_value);
_GLTRACER_API void GLTrace_glUniform2iv(FPglUniform2iv proc, GLint a_location, GLsizei a_count, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform3iv)(GLint a_location, GLsizei a_count, const GLint * a_value);
_GLTRACER_API void GLTrace_glUniform3iv(FPglUniform3iv proc, GLint a_location, GLsizei a_count, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform4iv)(GLint a_location, GLsizei a_count, const GLint * a_value);
_GLTRACER_API void GLTrace_glUniform4iv(FPglUniform4iv proc, GLint a_location, GLsizei a_count, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix2fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix2fv(FPglUniformMatrix2fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix3fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix3fv(FPglUniformMatrix3fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix4fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix4fv(FPglUniformMatrix4fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglValidateProgram)(GLuint a_program);
_GLTRACER_API void GLTrace_glValidateProgram(FPglValidateProgram proc, GLuint a_program, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib1d)(GLuint a_index, GLdouble a_x);
_GLTRACER_API void GLTrace_glVertexAttrib1d(FPglVertexAttrib1d proc, GLuint a_index, GLdouble a_x, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib1dv)(GLuint a_index, const GLdouble * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib1dv(FPglVertexAttrib1dv proc, GLuint a_index, const GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib1f)(GLuint a_index, GLfloat a_x);
_GLTRACER_API void GLTrace_glVertexAttrib1f(FPglVertexAttrib1f proc, GLuint a_index, GLfloat a_x, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib1fv)(GLuint a_index, const GLfloat * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib1fv(FPglVertexAttrib1fv proc, GLuint a_index, const GLfloat * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib1s)(GLuint a_index, GLshort a_x);
_GLTRACER_API void GLTrace_glVertexAttrib1s(FPglVertexAttrib1s proc, GLuint a_index, GLshort a_x, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib1sv)(GLuint a_index, const GLshort * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib1sv(FPglVertexAttrib1sv proc, GLuint a_index, const GLshort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib2d)(GLuint a_index, GLdouble a_x, GLdouble a_y);
_GLTRACER_API void GLTrace_glVertexAttrib2d(FPglVertexAttrib2d proc, GLuint a_index, GLdouble a_x, GLdouble a_y, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib2dv)(GLuint a_index, const GLdouble * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib2dv(FPglVertexAttrib2dv proc, GLuint a_index, const GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib2f)(GLuint a_index, GLfloat a_x, GLfloat a_y);
_GLTRACER_API void GLTrace_glVertexAttrib2f(FPglVertexAttrib2f proc, GLuint a_index, GLfloat a_x, GLfloat a_y, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib2fv)(GLuint a_index, const GLfloat * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib2fv(FPglVertexAttrib2fv proc, GLuint a_index, const GLfloat * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib2s)(GLuint a_index, GLshort a_x, GLshort a_y);
_GLTRACER_API void GLTrace_glVertexAttrib2s(FPglVertexAttrib2s proc, GLuint a_index, GLshort a_x, GLshort a_y, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib2sv)(GLuint a_index, const GLshort * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib2sv(FPglVertexAttrib2sv proc, GLuint a_index, const GLshort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib3d)(GLuint a_index, GLdouble a_x, GLdouble a_y, GLdouble a_z);
_GLTRACER_API void GLTrace_glVertexAttrib3d(FPglVertexAttrib3d proc, GLuint a_index, GLdouble a_x, GLdouble a_y, GLdouble a_z, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib3dv)(GLuint a_index, const GLdouble * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib3dv(FPglVertexAttrib3dv proc, GLuint a_index, const GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib3f)(GLuint a_index, GLfloat a_x, GLfloat a_y, GLfloat a_z);
_GLTRACER_API void GLTrace_glVertexAttrib3f(FPglVertexAttrib3f proc, GLuint a_index, GLfloat a_x, GLfloat a_y, GLfloat a_z, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib3fv)(GLuint a_index, const GLfloat * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib3fv(FPglVertexAttrib3fv proc, GLuint a_index, const GLfloat * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib3s)(GLuint a_index, GLshort a_x, GLshort a_y, GLshort a_z);
_GLTRACER_API void GLTrace_glVertexAttrib3s(FPglVertexAttrib3s proc, GLuint a_index, GLshort a_x, GLshort a_y, GLshort a_z, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib3sv)(GLuint a_index, const GLshort * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib3sv(FPglVertexAttrib3sv proc, GLuint a_index, const GLshort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4Nbv)(GLuint a_index, const GLbyte * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4Nbv(FPglVertexAttrib4Nbv proc, GLuint a_index, const GLbyte * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4Niv)(GLuint a_index, const GLint * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4Niv(FPglVertexAttrib4Niv proc, GLuint a_index, const GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4Nsv)(GLuint a_index, const GLshort * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4Nsv(FPglVertexAttrib4Nsv proc, GLuint a_index, const GLshort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4Nub)(GLuint a_index, GLubyte a_x, GLubyte a_y, GLubyte a_z, GLubyte a_w);
_GLTRACER_API void GLTrace_glVertexAttrib4Nub(FPglVertexAttrib4Nub proc, GLuint a_index, GLubyte a_x, GLubyte a_y, GLubyte a_z, GLubyte a_w, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4Nubv)(GLuint a_index, const GLubyte * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4Nubv(FPglVertexAttrib4Nubv proc, GLuint a_index, const GLubyte * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4Nuiv)(GLuint a_index, const GLuint * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4Nuiv(FPglVertexAttrib4Nuiv proc, GLuint a_index, const GLuint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4Nusv)(GLuint a_index, const GLushort * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4Nusv(FPglVertexAttrib4Nusv proc, GLuint a_index, const GLushort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4bv)(GLuint a_index, const GLbyte * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4bv(FPglVertexAttrib4bv proc, GLuint a_index, const GLbyte * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4d)(GLuint a_index, GLdouble a_x, GLdouble a_y, GLdouble a_z, GLdouble a_w);
_GLTRACER_API void GLTrace_glVertexAttrib4d(FPglVertexAttrib4d proc, GLuint a_index, GLdouble a_x, GLdouble a_y, GLdouble a_z, GLdouble a_w, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4dv)(GLuint a_index, const GLdouble * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4dv(FPglVertexAttrib4dv proc, GLuint a_index, const GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4f)(GLuint a_index, GLfloat a_x, GLfloat a_y, GLfloat a_z, GLfloat a_w);
_GLTRACER_API void GLTrace_glVertexAttrib4f(FPglVertexAttrib4f proc, GLuint a_index, GLfloat a_x, GLfloat a_y, GLfloat a_z, GLfloat a_w, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4fv)(GLuint a_index, const GLfloat * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4fv(FPglVertexAttrib4fv proc, GLuint a_index, const GLfloat * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4iv)(GLuint a_index, const GLint * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4iv(FPglVertexAttrib4iv proc, GLuint a_index, const GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4s)(GLuint a_index, GLshort a_x, GLshort a_y, GLshort a_z, GLshort a_w);
_GLTRACER_API void GLTrace_glVertexAttrib4s(FPglVertexAttrib4s proc, GLuint a_index, GLshort a_x, GLshort a_y, GLshort a_z, GLshort a_w, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4sv)(GLuint a_index, const GLshort * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4sv(FPglVertexAttrib4sv proc, GLuint a_index, const GLshort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4ubv)(GLuint a_index, const GLubyte * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4ubv(FPglVertexAttrib4ubv proc, GLuint a_index, const GLubyte * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4uiv)(GLuint a_index, const GLuint * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4uiv(FPglVertexAttrib4uiv proc, GLuint a_index, const GLuint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttrib4usv)(GLuint a_index, const GLushort * a_v);
_GLTRACER_API void GLTrace_glVertexAttrib4usv(FPglVertexAttrib4usv proc, GLuint a_index, const GLushort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribPointer)(GLuint a_index, GLint a_size, GLenum a_type, GLboolean a_normalized, GLsizei a_stride, const GLvoid * a_pointer);
_GLTRACER_API void GLTrace_glVertexAttribPointer(FPglVertexAttribPointer proc, GLuint a_index, GLint a_size, GLenum a_type, GLboolean a_normalized, GLsizei a_stride, const GLvoid * a_pointer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix2x3fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix2x3fv(FPglUniformMatrix2x3fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix3x2fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix3x2fv(FPglUniformMatrix3x2fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix2x4fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix2x4fv(FPglUniformMatrix2x4fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix4x2fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix4x2fv(FPglUniformMatrix4x2fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix3x4fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix3x4fv(FPglUniformMatrix3x4fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix4x3fv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix4x3fv(FPglUniformMatrix4x3fv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglColorMaski)(GLuint a_index, GLboolean a_r, GLboolean a_g, GLboolean a_b, GLboolean a_a);
_GLTRACER_API void GLTrace_glColorMaski(FPglColorMaski proc, GLuint a_index, GLboolean a_r, GLboolean a_g, GLboolean a_b, GLboolean a_a, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetBooleani_v)(GLenum a_target, GLuint a_index, GLboolean * a_data);
_GLTRACER_API void GLTrace_glGetBooleani_v(FPglGetBooleani_v proc, GLenum a_target, GLuint a_index, GLboolean * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetIntegeri_v)(GLenum a_target, GLuint a_index, GLint * a_data);
_GLTRACER_API void GLTrace_glGetIntegeri_v(FPglGetIntegeri_v proc, GLenum a_target, GLuint a_index, GLint * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglEnablei)(GLenum a_target, GLuint a_index);
_GLTRACER_API void GLTrace_glEnablei(FPglEnablei proc, GLenum a_target, GLuint a_index, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDisablei)(GLenum a_target, GLuint a_index);
_GLTRACER_API void GLTrace_glDisablei(FPglDisablei proc, GLenum a_target, GLuint a_index, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsEnabledi)(GLenum a_target, GLuint a_index);
_GLTRACER_API GLboolean GLTrace_glIsEnabledi(FPglIsEnabledi proc, GLenum a_target, GLuint a_index, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBeginTransformFeedback)(GLenum a_primitiveMode);
_GLTRACER_API void GLTrace_glBeginTransformFeedback(FPglBeginTransformFeedback proc, GLenum a_primitiveMode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglEndTransformFeedback)();
_GLTRACER_API void GLTrace_glEndTransformFeedback(FPglEndTransformFeedback proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindBufferRange)(GLenum a_target, GLuint a_index, GLuint a_buffer, GLintptr a_offset, GLsizeiptr a_size);
_GLTRACER_API void GLTrace_glBindBufferRange(FPglBindBufferRange proc, GLenum a_target, GLuint a_index, GLuint a_buffer, GLintptr a_offset, GLsizeiptr a_size, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindBufferBase)(GLenum a_target, GLuint a_index, GLuint a_buffer);
_GLTRACER_API void GLTrace_glBindBufferBase(FPglBindBufferBase proc, GLenum a_target, GLuint a_index, GLuint a_buffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTransformFeedbackVaryings)(GLuint a_program, GLsizei a_count, const GLchar* * a_varyings, GLenum a_bufferMode);
_GLTRACER_API void GLTrace_glTransformFeedbackVaryings(FPglTransformFeedbackVaryings proc, GLuint a_program, GLsizei a_count, const GLchar* * a_varyings, GLenum a_bufferMode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetTransformFeedbackVarying)(GLuint a_program, GLuint a_index, GLsizei a_bufSize, GLsizei * a_length, GLsizei * a_size, GLenum * a_type, GLchar * a_name);
_GLTRACER_API void GLTrace_glGetTransformFeedbackVarying(FPglGetTransformFeedbackVarying proc, GLuint a_program, GLuint a_index, GLsizei a_bufSize, GLsizei * a_length, GLsizei * a_size, GLenum * a_type, GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClampColor)(GLenum a_target, GLenum a_clamp);
_GLTRACER_API void GLTrace_glClampColor(FPglClampColor proc, GLenum a_target, GLenum a_clamp, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBeginConditionalRender)(GLuint a_id, GLenum a_mode);
_GLTRACER_API void GLTrace_glBeginConditionalRender(FPglBeginConditionalRender proc, GLuint a_id, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglEndConditionalRender)();
_GLTRACER_API void GLTrace_glEndConditionalRender(FPglEndConditionalRender proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribIPointer)(GLuint a_index, GLint a_size, GLenum a_type, GLsizei a_stride, const GLvoid * a_pointer);
_GLTRACER_API void GLTrace_glVertexAttribIPointer(FPglVertexAttribIPointer proc, GLuint a_index, GLint a_size, GLenum a_type, GLsizei a_stride, const GLvoid * a_pointer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetVertexAttribIiv)(GLuint a_index, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetVertexAttribIiv(FPglGetVertexAttribIiv proc, GLuint a_index, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetVertexAttribIuiv)(GLuint a_index, GLenum a_pname, GLuint * a_params);
_GLTRACER_API void GLTrace_glGetVertexAttribIuiv(FPglGetVertexAttribIuiv proc, GLuint a_index, GLenum a_pname, GLuint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI1i)(GLuint a_index, GLint a_x);
_GLTRACER_API void GLTrace_glVertexAttribI1i(FPglVertexAttribI1i proc, GLuint a_index, GLint a_x, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI2i)(GLuint a_index, GLint a_x, GLint a_y);
_GLTRACER_API void GLTrace_glVertexAttribI2i(FPglVertexAttribI2i proc, GLuint a_index, GLint a_x, GLint a_y, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI3i)(GLuint a_index, GLint a_x, GLint a_y, GLint a_z);
_GLTRACER_API void GLTrace_glVertexAttribI3i(FPglVertexAttribI3i proc, GLuint a_index, GLint a_x, GLint a_y, GLint a_z, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI4i)(GLuint a_index, GLint a_x, GLint a_y, GLint a_z, GLint a_w);
_GLTRACER_API void GLTrace_glVertexAttribI4i(FPglVertexAttribI4i proc, GLuint a_index, GLint a_x, GLint a_y, GLint a_z, GLint a_w, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI1ui)(GLuint a_index, GLuint a_x);
_GLTRACER_API void GLTrace_glVertexAttribI1ui(FPglVertexAttribI1ui proc, GLuint a_index, GLuint a_x, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI2ui)(GLuint a_index, GLuint a_x, GLuint a_y);
_GLTRACER_API void GLTrace_glVertexAttribI2ui(FPglVertexAttribI2ui proc, GLuint a_index, GLuint a_x, GLuint a_y, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI3ui)(GLuint a_index, GLuint a_x, GLuint a_y, GLuint a_z);
_GLTRACER_API void GLTrace_glVertexAttribI3ui(FPglVertexAttribI3ui proc, GLuint a_index, GLuint a_x, GLuint a_y, GLuint a_z, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI4ui)(GLuint a_index, GLuint a_x, GLuint a_y, GLuint a_z, GLuint a_w);
_GLTRACER_API void GLTrace_glVertexAttribI4ui(FPglVertexAttribI4ui proc, GLuint a_index, GLuint a_x, GLuint a_y, GLuint a_z, GLuint a_w, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI1iv)(GLuint a_index, const GLint * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI1iv(FPglVertexAttribI1iv proc, GLuint a_index, const GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI2iv)(GLuint a_index, const GLint * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI2iv(FPglVertexAttribI2iv proc, GLuint a_index, const GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI3iv)(GLuint a_index, const GLint * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI3iv(FPglVertexAttribI3iv proc, GLuint a_index, const GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI4iv)(GLuint a_index, const GLint * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI4iv(FPglVertexAttribI4iv proc, GLuint a_index, const GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI1uiv)(GLuint a_index, const GLuint * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI1uiv(FPglVertexAttribI1uiv proc, GLuint a_index, const GLuint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI2uiv)(GLuint a_index, const GLuint * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI2uiv(FPglVertexAttribI2uiv proc, GLuint a_index, const GLuint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI3uiv)(GLuint a_index, const GLuint * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI3uiv(FPglVertexAttribI3uiv proc, GLuint a_index, const GLuint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI4uiv)(GLuint a_index, const GLuint * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI4uiv(FPglVertexAttribI4uiv proc, GLuint a_index, const GLuint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI4bv)(GLuint a_index, const GLbyte * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI4bv(FPglVertexAttribI4bv proc, GLuint a_index, const GLbyte * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI4sv)(GLuint a_index, const GLshort * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI4sv(FPglVertexAttribI4sv proc, GLuint a_index, const GLshort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI4ubv)(GLuint a_index, const GLubyte * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI4ubv(FPglVertexAttribI4ubv proc, GLuint a_index, const GLubyte * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribI4usv)(GLuint a_index, const GLushort * a_v);
_GLTRACER_API void GLTrace_glVertexAttribI4usv(FPglVertexAttribI4usv proc, GLuint a_index, const GLushort * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetUniformuiv)(GLuint a_program, GLint a_location, GLuint * a_params);
_GLTRACER_API void GLTrace_glGetUniformuiv(FPglGetUniformuiv proc, GLuint a_program, GLint a_location, GLuint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindFragDataLocation)(GLuint a_program, GLuint a_color, const GLchar * a_name);
_GLTRACER_API void GLTrace_glBindFragDataLocation(FPglBindFragDataLocation proc, GLuint a_program, GLuint a_color, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef GLint (APIENTRY* FPglGetFragDataLocation)(GLuint a_program, const GLchar * a_name);
_GLTRACER_API GLint GLTrace_glGetFragDataLocation(FPglGetFragDataLocation proc, GLuint a_program, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform1ui)(GLint a_location, GLuint a_v0);
_GLTRACER_API void GLTrace_glUniform1ui(FPglUniform1ui proc, GLint a_location, GLuint a_v0, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform2ui)(GLint a_location, GLuint a_v0, GLuint a_v1);
_GLTRACER_API void GLTrace_glUniform2ui(FPglUniform2ui proc, GLint a_location, GLuint a_v0, GLuint a_v1, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform3ui)(GLint a_location, GLuint a_v0, GLuint a_v1, GLuint a_v2);
_GLTRACER_API void GLTrace_glUniform3ui(FPglUniform3ui proc, GLint a_location, GLuint a_v0, GLuint a_v1, GLuint a_v2, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform4ui)(GLint a_location, GLuint a_v0, GLuint a_v1, GLuint a_v2, GLuint a_v3);
_GLTRACER_API void GLTrace_glUniform4ui(FPglUniform4ui proc, GLint a_location, GLuint a_v0, GLuint a_v1, GLuint a_v2, GLuint a_v3, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform1uiv)(GLint a_location, GLsizei a_count, const GLuint * a_value);
_GLTRACER_API void GLTrace_glUniform1uiv(FPglUniform1uiv proc, GLint a_location, GLsizei a_count, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform2uiv)(GLint a_location, GLsizei a_count, const GLuint * a_value);
_GLTRACER_API void GLTrace_glUniform2uiv(FPglUniform2uiv proc, GLint a_location, GLsizei a_count, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform3uiv)(GLint a_location, GLsizei a_count, const GLuint * a_value);
_GLTRACER_API void GLTrace_glUniform3uiv(FPglUniform3uiv proc, GLint a_location, GLsizei a_count, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform4uiv)(GLint a_location, GLsizei a_count, const GLuint * a_value);
_GLTRACER_API void GLTrace_glUniform4uiv(FPglUniform4uiv proc, GLint a_location, GLsizei a_count, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexParameterIiv)(GLenum a_target, GLenum a_pname, const GLint * a_params);
_GLTRACER_API void GLTrace_glTexParameterIiv(FPglTexParameterIiv proc, GLenum a_target, GLenum a_pname, const GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexParameterIuiv)(GLenum a_target, GLenum a_pname, const GLuint * a_params);
_GLTRACER_API void GLTrace_glTexParameterIuiv(FPglTexParameterIuiv proc, GLenum a_target, GLenum a_pname, const GLuint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetTexParameterIiv)(GLenum a_target, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetTexParameterIiv(FPglGetTexParameterIiv proc, GLenum a_target, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetTexParameterIuiv)(GLenum a_target, GLenum a_pname, GLuint * a_params);
_GLTRACER_API void GLTrace_glGetTexParameterIuiv(FPglGetTexParameterIuiv proc, GLenum a_target, GLenum a_pname, GLuint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClearBufferiv)(GLenum a_buffer, GLint a_drawbuffer, const GLint * a_value);
_GLTRACER_API void GLTrace_glClearBufferiv(FPglClearBufferiv proc, GLenum a_buffer, GLint a_drawbuffer, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClearBufferuiv)(GLenum a_buffer, GLint a_drawbuffer, const GLuint * a_value);
_GLTRACER_API void GLTrace_glClearBufferuiv(FPglClearBufferuiv proc, GLenum a_buffer, GLint a_drawbuffer, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClearBufferfv)(GLenum a_buffer, GLint a_drawbuffer, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glClearBufferfv(FPglClearBufferfv proc, GLenum a_buffer, GLint a_drawbuffer, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClearBufferfi)(GLenum a_buffer, GLint a_drawbuffer, GLfloat a_depth, GLint a_stencil);
_GLTRACER_API void GLTrace_glClearBufferfi(FPglClearBufferfi proc, GLenum a_buffer, GLint a_drawbuffer, GLfloat a_depth, GLint a_stencil, const char* fileName, unsigned int lineNum);
typedef const GLubyte *  (APIENTRY* FPglGetStringi)(GLenum a_name, GLuint a_index);
_GLTRACER_API const GLubyte *  GLTrace_glGetStringi(FPglGetStringi proc, GLenum a_name, GLuint a_index, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawArraysInstanced)(GLenum a_mode, GLint a_first, GLsizei a_count, GLsizei a_primcount);
_GLTRACER_API void GLTrace_glDrawArraysInstanced(FPglDrawArraysInstanced proc, GLenum a_mode, GLint a_first, GLsizei a_count, GLsizei a_primcount, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawElementsInstanced)(GLenum a_mode, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, GLsizei a_primcount);
_GLTRACER_API void GLTrace_glDrawElementsInstanced(FPglDrawElementsInstanced proc, GLenum a_mode, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, GLsizei a_primcount, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexBuffer)(GLenum a_target, GLenum a_internalformat, GLuint a_buffer);
_GLTRACER_API void GLTrace_glTexBuffer(FPglTexBuffer proc, GLenum a_target, GLenum a_internalformat, GLuint a_buffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPrimitiveRestartIndex)(GLuint a_index);
_GLTRACER_API void GLTrace_glPrimitiveRestartIndex(FPglPrimitiveRestartIndex proc, GLuint a_index, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetInteger64i_v)(GLenum a_target, GLuint a_index, GLint64 * a_data);
_GLTRACER_API void GLTrace_glGetInteger64i_v(FPglGetInteger64i_v proc, GLenum a_target, GLuint a_index, GLint64 * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetBufferParameteri64v)(GLenum a_target, GLenum a_pname, GLint64 * a_params);
_GLTRACER_API void GLTrace_glGetBufferParameteri64v(FPglGetBufferParameteri64v proc, GLenum a_target, GLenum a_pname, GLint64 * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFramebufferTexture)(GLenum a_target, GLenum a_attachment, GLuint a_texture, GLint a_level);
_GLTRACER_API void GLTrace_glFramebufferTexture(FPglFramebufferTexture proc, GLenum a_target, GLenum a_attachment, GLuint a_texture, GLint a_level, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribDivisor)(GLuint a_index, GLuint a_divisor);
_GLTRACER_API void GLTrace_glVertexAttribDivisor(FPglVertexAttribDivisor proc, GLuint a_index, GLuint a_divisor, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMinSampleShading)(GLclampf a_value);
_GLTRACER_API void GLTrace_glMinSampleShading(FPglMinSampleShading proc, GLclampf a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendEquationi)(GLuint a_buf, GLenum a_mode);
_GLTRACER_API void GLTrace_glBlendEquationi(FPglBlendEquationi proc, GLuint a_buf, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendEquationSeparatei)(GLuint a_buf, GLenum a_modeRGB, GLenum a_modeAlpha);
_GLTRACER_API void GLTrace_glBlendEquationSeparatei(FPglBlendEquationSeparatei proc, GLuint a_buf, GLenum a_modeRGB, GLenum a_modeAlpha, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendFunci)(GLuint a_buf, GLenum a_src, GLenum a_dst);
_GLTRACER_API void GLTrace_glBlendFunci(FPglBlendFunci proc, GLuint a_buf, GLenum a_src, GLenum a_dst, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendFuncSeparatei)(GLuint a_buf, GLenum a_srcRGB, GLenum a_dstRGB, GLenum a_srcAlpha, GLenum a_dstAlpha);
_GLTRACER_API void GLTrace_glBlendFuncSeparatei(FPglBlendFuncSeparatei proc, GLuint a_buf, GLenum a_srcRGB, GLenum a_dstRGB, GLenum a_srcAlpha, GLenum a_dstAlpha, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsRenderbuffer)(GLuint a_renderbuffer);
_GLTRACER_API GLboolean GLTrace_glIsRenderbuffer(FPglIsRenderbuffer proc, GLuint a_renderbuffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindRenderbuffer)(GLenum a_target, GLuint a_renderbuffer);
_GLTRACER_API void GLTrace_glBindRenderbuffer(FPglBindRenderbuffer proc, GLenum a_target, GLuint a_renderbuffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteRenderbuffers)(GLsizei a_n, const GLuint * a_renderbuffers);
_GLTRACER_API void GLTrace_glDeleteRenderbuffers(FPglDeleteRenderbuffers proc, GLsizei a_n, const GLuint * a_renderbuffers, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenRenderbuffers)(GLsizei a_n, GLuint * a_renderbuffers);
_GLTRACER_API void GLTrace_glGenRenderbuffers(FPglGenRenderbuffers proc, GLsizei a_n, GLuint * a_renderbuffers, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglRenderbufferStorage)(GLenum a_target, GLenum a_internalformat, GLsizei a_width, GLsizei a_height);
_GLTRACER_API void GLTrace_glRenderbufferStorage(FPglRenderbufferStorage proc, GLenum a_target, GLenum a_internalformat, GLsizei a_width, GLsizei a_height, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetRenderbufferParameteriv)(GLenum a_target, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetRenderbufferParameteriv(FPglGetRenderbufferParameteriv proc, GLenum a_target, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsFramebuffer)(GLuint a_framebuffer);
_GLTRACER_API GLboolean GLTrace_glIsFramebuffer(FPglIsFramebuffer proc, GLuint a_framebuffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindFramebuffer)(GLenum a_target, GLuint a_framebuffer);
_GLTRACER_API void GLTrace_glBindFramebuffer(FPglBindFramebuffer proc, GLenum a_target, GLuint a_framebuffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteFramebuffers)(GLsizei a_n, const GLuint * a_framebuffers);
_GLTRACER_API void GLTrace_glDeleteFramebuffers(FPglDeleteFramebuffers proc, GLsizei a_n, const GLuint * a_framebuffers, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenFramebuffers)(GLsizei a_n, GLuint * a_framebuffers);
_GLTRACER_API void GLTrace_glGenFramebuffers(FPglGenFramebuffers proc, GLsizei a_n, GLuint * a_framebuffers, const char* fileName, unsigned int lineNum);
typedef GLenum (APIENTRY* FPglCheckFramebufferStatus)(GLenum a_target);
_GLTRACER_API GLenum GLTrace_glCheckFramebufferStatus(FPglCheckFramebufferStatus proc, GLenum a_target, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFramebufferTexture1D)(GLenum a_target, GLenum a_attachment, GLenum a_textarget, GLuint a_texture, GLint a_level);
_GLTRACER_API void GLTrace_glFramebufferTexture1D(FPglFramebufferTexture1D proc, GLenum a_target, GLenum a_attachment, GLenum a_textarget, GLuint a_texture, GLint a_level, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFramebufferTexture2D)(GLenum a_target, GLenum a_attachment, GLenum a_textarget, GLuint a_texture, GLint a_level);
_GLTRACER_API void GLTrace_glFramebufferTexture2D(FPglFramebufferTexture2D proc, GLenum a_target, GLenum a_attachment, GLenum a_textarget, GLuint a_texture, GLint a_level, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFramebufferTexture3D)(GLenum a_target, GLenum a_attachment, GLenum a_textarget, GLuint a_texture, GLint a_level, GLint a_zoffset);
_GLTRACER_API void GLTrace_glFramebufferTexture3D(FPglFramebufferTexture3D proc, GLenum a_target, GLenum a_attachment, GLenum a_textarget, GLuint a_texture, GLint a_level, GLint a_zoffset, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFramebufferRenderbuffer)(GLenum a_target, GLenum a_attachment, GLenum a_renderbuffertarget, GLuint a_renderbuffer);
_GLTRACER_API void GLTrace_glFramebufferRenderbuffer(FPglFramebufferRenderbuffer proc, GLenum a_target, GLenum a_attachment, GLenum a_renderbuffertarget, GLuint a_renderbuffer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetFramebufferAttachmentParameteriv)(GLenum a_target, GLenum a_attachment, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetFramebufferAttachmentParameteriv(FPglGetFramebufferAttachmentParameteriv proc, GLenum a_target, GLenum a_attachment, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenerateMipmap)(GLenum a_target);
_GLTRACER_API void GLTrace_glGenerateMipmap(FPglGenerateMipmap proc, GLenum a_target, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlitFramebuffer)(GLint a_srcX0, GLint a_srcY0, GLint a_srcX1, GLint a_srcY1, GLint a_dstX0, GLint a_dstY0, GLint a_dstX1, GLint a_dstY1, GLbitfield a_mask, GLenum a_filter);
_GLTRACER_API void GLTrace_glBlitFramebuffer(FPglBlitFramebuffer proc, GLint a_srcX0, GLint a_srcY0, GLint a_srcX1, GLint a_srcY1, GLint a_dstX0, GLint a_dstY0, GLint a_dstX1, GLint a_dstY1, GLbitfield a_mask, GLenum a_filter, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglRenderbufferStorageMultisample)(GLenum a_target, GLsizei a_samples, GLenum a_internalformat, GLsizei a_width, GLsizei a_height);
_GLTRACER_API void GLTrace_glRenderbufferStorageMultisample(FPglRenderbufferStorageMultisample proc, GLenum a_target, GLsizei a_samples, GLenum a_internalformat, GLsizei a_width, GLsizei a_height, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFramebufferTextureLayer)(GLenum a_target, GLenum a_attachment, GLuint a_texture, GLint a_level, GLint a_layer);
_GLTRACER_API void GLTrace_glFramebufferTextureLayer(FPglFramebufferTextureLayer proc, GLenum a_target, GLenum a_attachment, GLuint a_texture, GLint a_level, GLint a_layer, const char* fileName, unsigned int lineNum);
typedef GLvoid*  (APIENTRY* FPglMapBufferRange)(GLenum a_target, GLintptr a_offset, GLsizeiptr a_length, GLbitfield a_access);
_GLTRACER_API GLvoid*  GLTrace_glMapBufferRange(FPglMapBufferRange proc, GLenum a_target, GLintptr a_offset, GLsizeiptr a_length, GLbitfield a_access, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglFlushMappedBufferRange)(GLenum a_target, GLintptr a_offset, GLsizeiptr a_length);
_GLTRACER_API void GLTrace_glFlushMappedBufferRange(FPglFlushMappedBufferRange proc, GLenum a_target, GLintptr a_offset, GLsizeiptr a_length, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindVertexArray)(GLuint a_array);
_GLTRACER_API void GLTrace_glBindVertexArray(FPglBindVertexArray proc, GLuint a_array, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteVertexArrays)(GLsizei a_n, const GLuint * a_arrays);
_GLTRACER_API void GLTrace_glDeleteVertexArrays(FPglDeleteVertexArrays proc, GLsizei a_n, const GLuint * a_arrays, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenVertexArrays)(GLsizei a_n, GLuint * a_arrays);
_GLTRACER_API void GLTrace_glGenVertexArrays(FPglGenVertexArrays proc, GLsizei a_n, GLuint * a_arrays, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsVertexArray)(GLuint a_array);
_GLTRACER_API GLboolean GLTrace_glIsVertexArray(FPglIsVertexArray proc, GLuint a_array, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetUniformIndices)(GLuint a_program, GLsizei a_uniformCount, const GLchar* * a_uniformNames, GLuint * a_uniformIndices);
_GLTRACER_API void GLTrace_glGetUniformIndices(FPglGetUniformIndices proc, GLuint a_program, GLsizei a_uniformCount, const GLchar* * a_uniformNames, GLuint * a_uniformIndices, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveUniformsiv)(GLuint a_program, GLsizei a_uniformCount, const GLuint * a_uniformIndices, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetActiveUniformsiv(FPglGetActiveUniformsiv proc, GLuint a_program, GLsizei a_uniformCount, const GLuint * a_uniformIndices, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveUniformName)(GLuint a_program, GLuint a_uniformIndex, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_uniformName);
_GLTRACER_API void GLTrace_glGetActiveUniformName(FPglGetActiveUniformName proc, GLuint a_program, GLuint a_uniformIndex, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_uniformName, const char* fileName, unsigned int lineNum);
typedef GLuint (APIENTRY* FPglGetUniformBlockIndex)(GLuint a_program, const GLchar * a_uniformBlockName);
_GLTRACER_API GLuint GLTrace_glGetUniformBlockIndex(FPglGetUniformBlockIndex proc, GLuint a_program, const GLchar * a_uniformBlockName, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveUniformBlockiv)(GLuint a_program, GLuint a_uniformBlockIndex, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetActiveUniformBlockiv(FPglGetActiveUniformBlockiv proc, GLuint a_program, GLuint a_uniformBlockIndex, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveUniformBlockName)(GLuint a_program, GLuint a_uniformBlockIndex, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_uniformBlockName);
_GLTRACER_API void GLTrace_glGetActiveUniformBlockName(FPglGetActiveUniformBlockName proc, GLuint a_program, GLuint a_uniformBlockIndex, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_uniformBlockName, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformBlockBinding)(GLuint a_program, GLuint a_uniformBlockIndex, GLuint a_uniformBlockBinding);
_GLTRACER_API void GLTrace_glUniformBlockBinding(FPglUniformBlockBinding proc, GLuint a_program, GLuint a_uniformBlockIndex, GLuint a_uniformBlockBinding, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCopyBufferSubData)(GLenum a_readTarget, GLenum a_writeTarget, GLintptr a_readOffset, GLintptr a_writeOffset, GLsizeiptr a_size);
_GLTRACER_API void GLTrace_glCopyBufferSubData(FPglCopyBufferSubData proc, GLenum a_readTarget, GLenum a_writeTarget, GLintptr a_readOffset, GLintptr a_writeOffset, GLsizeiptr a_size, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawElementsBaseVertex)(GLenum a_mode, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, GLint a_basevertex);
_GLTRACER_API void GLTrace_glDrawElementsBaseVertex(FPglDrawElementsBaseVertex proc, GLenum a_mode, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, GLint a_basevertex, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawRangeElementsBaseVertex)(GLenum a_mode, GLuint a_start, GLuint a_end, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, GLint a_basevertex);
_GLTRACER_API void GLTrace_glDrawRangeElementsBaseVertex(FPglDrawRangeElementsBaseVertex proc, GLenum a_mode, GLuint a_start, GLuint a_end, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, GLint a_basevertex, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawElementsInstancedBaseVertex)(GLenum a_mode, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, GLsizei a_primcount, GLint a_basevertex);
_GLTRACER_API void GLTrace_glDrawElementsInstancedBaseVertex(FPglDrawElementsInstancedBaseVertex proc, GLenum a_mode, GLsizei a_count, GLenum a_type, const GLvoid * a_indices, GLsizei a_primcount, GLint a_basevertex, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiDrawElementsBaseVertex)(GLenum a_mode, const GLsizei * a_count, GLenum a_type, const GLvoid* * a_indices, GLsizei a_primcount, const GLint * a_basevertex);
_GLTRACER_API void GLTrace_glMultiDrawElementsBaseVertex(FPglMultiDrawElementsBaseVertex proc, GLenum a_mode, const GLsizei * a_count, GLenum a_type, const GLvoid* * a_indices, GLsizei a_primcount, const GLint * a_basevertex, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProvokingVertex)(GLenum a_mode);
_GLTRACER_API void GLTrace_glProvokingVertex(FPglProvokingVertex proc, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef GLsync (APIENTRY* FPglFenceSync)(GLenum a_condition, GLbitfield a_flags);
_GLTRACER_API GLsync GLTrace_glFenceSync(FPglFenceSync proc, GLenum a_condition, GLbitfield a_flags, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsSync)(GLsync a_sync);
_GLTRACER_API GLboolean GLTrace_glIsSync(FPglIsSync proc, GLsync a_sync, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteSync)(GLsync a_sync);
_GLTRACER_API void GLTrace_glDeleteSync(FPglDeleteSync proc, GLsync a_sync, const char* fileName, unsigned int lineNum);
typedef GLenum (APIENTRY* FPglClientWaitSync)(GLsync a_sync, GLbitfield a_flags, GLuint64 a_timeout);
_GLTRACER_API GLenum GLTrace_glClientWaitSync(FPglClientWaitSync proc, GLsync a_sync, GLbitfield a_flags, GLuint64 a_timeout, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglWaitSync)(GLsync a_sync, GLbitfield a_flags, GLuint64 a_timeout);
_GLTRACER_API void GLTrace_glWaitSync(FPglWaitSync proc, GLsync a_sync, GLbitfield a_flags, GLuint64 a_timeout, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetInteger64v)(GLenum a_pname, GLint64 * a_params);
_GLTRACER_API void GLTrace_glGetInteger64v(FPglGetInteger64v proc, GLenum a_pname, GLint64 * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetSynciv)(GLsync a_sync, GLenum a_pname, GLsizei a_bufSize, GLsizei * a_length, GLint * a_values);
_GLTRACER_API void GLTrace_glGetSynciv(FPglGetSynciv proc, GLsync a_sync, GLenum a_pname, GLsizei a_bufSize, GLsizei * a_length, GLint * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexImage2DMultisample)(GLenum a_target, GLsizei a_samples, GLint a_internalformat, GLsizei a_width, GLsizei a_height, GLboolean a_fixedsamplelocations);
_GLTRACER_API void GLTrace_glTexImage2DMultisample(FPglTexImage2DMultisample proc, GLenum a_target, GLsizei a_samples, GLint a_internalformat, GLsizei a_width, GLsizei a_height, GLboolean a_fixedsamplelocations, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexImage3DMultisample)(GLenum a_target, GLsizei a_samples, GLint a_internalformat, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLboolean a_fixedsamplelocations);
_GLTRACER_API void GLTrace_glTexImage3DMultisample(FPglTexImage3DMultisample proc, GLenum a_target, GLsizei a_samples, GLint a_internalformat, GLsizei a_width, GLsizei a_height, GLsizei a_depth, GLboolean a_fixedsamplelocations, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetMultisamplefv)(GLenum a_pname, GLuint a_index, GLfloat * a_val);
_GLTRACER_API void GLTrace_glGetMultisamplefv(FPglGetMultisamplefv proc, GLenum a_pname, GLuint a_index, GLfloat * a_val, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSampleMaski)(GLuint a_index, GLbitfield a_mask);
_GLTRACER_API void GLTrace_glSampleMaski(FPglSampleMaski proc, GLuint a_index, GLbitfield a_mask, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendEquationiARB)(GLuint a_buf, GLenum a_mode);
_GLTRACER_API void GLTrace_glBlendEquationiARB(FPglBlendEquationiARB proc, GLuint a_buf, GLenum a_mode, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendEquationSeparateiARB)(GLuint a_buf, GLenum a_modeRGB, GLenum a_modeAlpha);
_GLTRACER_API void GLTrace_glBlendEquationSeparateiARB(FPglBlendEquationSeparateiARB proc, GLuint a_buf, GLenum a_modeRGB, GLenum a_modeAlpha, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendFunciARB)(GLuint a_buf, GLenum a_src, GLenum a_dst);
_GLTRACER_API void GLTrace_glBlendFunciARB(FPglBlendFunciARB proc, GLuint a_buf, GLenum a_src, GLenum a_dst, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBlendFuncSeparateiARB)(GLuint a_buf, GLenum a_srcRGB, GLenum a_dstRGB, GLenum a_srcAlpha, GLenum a_dstAlpha);
_GLTRACER_API void GLTrace_glBlendFuncSeparateiARB(FPglBlendFuncSeparateiARB proc, GLuint a_buf, GLenum a_srcRGB, GLenum a_dstRGB, GLenum a_srcAlpha, GLenum a_dstAlpha, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMinSampleShadingARB)(GLclampf a_value);
_GLTRACER_API void GLTrace_glMinSampleShadingARB(FPglMinSampleShadingARB proc, GLclampf a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglNamedStringARB)(GLenum a_type, GLint a_namelen, const GLchar * a_name, GLint a_stringlen, const GLchar * a_string);
_GLTRACER_API void GLTrace_glNamedStringARB(FPglNamedStringARB proc, GLenum a_type, GLint a_namelen, const GLchar * a_name, GLint a_stringlen, const GLchar * a_string, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteNamedStringARB)(GLint a_namelen, const GLchar * a_name);
_GLTRACER_API void GLTrace_glDeleteNamedStringARB(FPglDeleteNamedStringARB proc, GLint a_namelen, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglCompileShaderIncludeARB)(GLuint a_shader, GLsizei a_count, const GLchar* * a_path, const GLint * a_length);
_GLTRACER_API void GLTrace_glCompileShaderIncludeARB(FPglCompileShaderIncludeARB proc, GLuint a_shader, GLsizei a_count, const GLchar* * a_path, const GLint * a_length, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsNamedStringARB)(GLint a_namelen, const GLchar * a_name);
_GLTRACER_API GLboolean GLTrace_glIsNamedStringARB(FPglIsNamedStringARB proc, GLint a_namelen, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetNamedStringARB)(GLint a_namelen, const GLchar * a_name, GLsizei a_bufSize, GLint * a_stringlen, GLchar * a_string);
_GLTRACER_API void GLTrace_glGetNamedStringARB(FPglGetNamedStringARB proc, GLint a_namelen, const GLchar * a_name, GLsizei a_bufSize, GLint * a_stringlen, GLchar * a_string, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetNamedStringivARB)(GLint a_namelen, const GLchar * a_name, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetNamedStringivARB(FPglGetNamedStringivARB proc, GLint a_namelen, const GLchar * a_name, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindFragDataLocationIndexed)(GLuint a_program, GLuint a_colorNumber, GLuint a_index, const GLchar * a_name);
_GLTRACER_API void GLTrace_glBindFragDataLocationIndexed(FPglBindFragDataLocationIndexed proc, GLuint a_program, GLuint a_colorNumber, GLuint a_index, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef GLint (APIENTRY* FPglGetFragDataIndex)(GLuint a_program, const GLchar * a_name);
_GLTRACER_API GLint GLTrace_glGetFragDataIndex(FPglGetFragDataIndex proc, GLuint a_program, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenSamplers)(GLsizei a_count, GLuint * a_samplers);
_GLTRACER_API void GLTrace_glGenSamplers(FPglGenSamplers proc, GLsizei a_count, GLuint * a_samplers, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteSamplers)(GLsizei a_count, const GLuint * a_samplers);
_GLTRACER_API void GLTrace_glDeleteSamplers(FPglDeleteSamplers proc, GLsizei a_count, const GLuint * a_samplers, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsSampler)(GLuint a_sampler);
_GLTRACER_API GLboolean GLTrace_glIsSampler(FPglIsSampler proc, GLuint a_sampler, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindSampler)(GLuint a_unit, GLuint a_sampler);
_GLTRACER_API void GLTrace_glBindSampler(FPglBindSampler proc, GLuint a_unit, GLuint a_sampler, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSamplerParameteri)(GLuint a_sampler, GLenum a_pname, GLint a_param);
_GLTRACER_API void GLTrace_glSamplerParameteri(FPglSamplerParameteri proc, GLuint a_sampler, GLenum a_pname, GLint a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSamplerParameteriv)(GLuint a_sampler, GLenum a_pname, const GLint * a_param);
_GLTRACER_API void GLTrace_glSamplerParameteriv(FPglSamplerParameteriv proc, GLuint a_sampler, GLenum a_pname, const GLint * a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSamplerParameterf)(GLuint a_sampler, GLenum a_pname, GLfloat a_param);
_GLTRACER_API void GLTrace_glSamplerParameterf(FPglSamplerParameterf proc, GLuint a_sampler, GLenum a_pname, GLfloat a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSamplerParameterfv)(GLuint a_sampler, GLenum a_pname, const GLfloat * a_param);
_GLTRACER_API void GLTrace_glSamplerParameterfv(FPglSamplerParameterfv proc, GLuint a_sampler, GLenum a_pname, const GLfloat * a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSamplerParameterIiv)(GLuint a_sampler, GLenum a_pname, const GLint * a_param);
_GLTRACER_API void GLTrace_glSamplerParameterIiv(FPglSamplerParameterIiv proc, GLuint a_sampler, GLenum a_pname, const GLint * a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSamplerParameterIuiv)(GLuint a_sampler, GLenum a_pname, const GLuint * a_param);
_GLTRACER_API void GLTrace_glSamplerParameterIuiv(FPglSamplerParameterIuiv proc, GLuint a_sampler, GLenum a_pname, const GLuint * a_param, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetSamplerParameteriv)(GLuint a_sampler, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetSamplerParameteriv(FPglGetSamplerParameteriv proc, GLuint a_sampler, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetSamplerParameterIiv)(GLuint a_sampler, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetSamplerParameterIiv(FPglGetSamplerParameterIiv proc, GLuint a_sampler, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetSamplerParameterfv)(GLuint a_sampler, GLenum a_pname, GLfloat * a_params);
_GLTRACER_API void GLTrace_glGetSamplerParameterfv(FPglGetSamplerParameterfv proc, GLuint a_sampler, GLenum a_pname, GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetSamplerParameterIuiv)(GLuint a_sampler, GLenum a_pname, GLuint * a_params);
_GLTRACER_API void GLTrace_glGetSamplerParameterIuiv(FPglGetSamplerParameterIuiv proc, GLuint a_sampler, GLenum a_pname, GLuint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglQueryCounter)(GLuint a_id, GLenum a_target);
_GLTRACER_API void GLTrace_glQueryCounter(FPglQueryCounter proc, GLuint a_id, GLenum a_target, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetQueryObjecti64v)(GLuint a_id, GLenum a_pname, GLint64 * a_params);
_GLTRACER_API void GLTrace_glGetQueryObjecti64v(FPglGetQueryObjecti64v proc, GLuint a_id, GLenum a_pname, GLint64 * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetQueryObjectui64v)(GLuint a_id, GLenum a_pname, GLuint64 * a_params);
_GLTRACER_API void GLTrace_glGetQueryObjectui64v(FPglGetQueryObjectui64v proc, GLuint a_id, GLenum a_pname, GLuint64 * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexP2ui)(GLenum a_type, GLuint a_value);
_GLTRACER_API void GLTrace_glVertexP2ui(FPglVertexP2ui proc, GLenum a_type, GLuint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexP2uiv)(GLenum a_type, const GLuint * a_value);
_GLTRACER_API void GLTrace_glVertexP2uiv(FPglVertexP2uiv proc, GLenum a_type, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexP3ui)(GLenum a_type, GLuint a_value);
_GLTRACER_API void GLTrace_glVertexP3ui(FPglVertexP3ui proc, GLenum a_type, GLuint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexP3uiv)(GLenum a_type, const GLuint * a_value);
_GLTRACER_API void GLTrace_glVertexP3uiv(FPglVertexP3uiv proc, GLenum a_type, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexP4ui)(GLenum a_type, GLuint a_value);
_GLTRACER_API void GLTrace_glVertexP4ui(FPglVertexP4ui proc, GLenum a_type, GLuint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexP4uiv)(GLenum a_type, const GLuint * a_value);
_GLTRACER_API void GLTrace_glVertexP4uiv(FPglVertexP4uiv proc, GLenum a_type, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexCoordP1ui)(GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glTexCoordP1ui(FPglTexCoordP1ui proc, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexCoordP1uiv)(GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glTexCoordP1uiv(FPglTexCoordP1uiv proc, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexCoordP2ui)(GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glTexCoordP2ui(FPglTexCoordP2ui proc, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexCoordP2uiv)(GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glTexCoordP2uiv(FPglTexCoordP2uiv proc, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexCoordP3ui)(GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glTexCoordP3ui(FPglTexCoordP3ui proc, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexCoordP3uiv)(GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glTexCoordP3uiv(FPglTexCoordP3uiv proc, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexCoordP4ui)(GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glTexCoordP4ui(FPglTexCoordP4ui proc, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglTexCoordP4uiv)(GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glTexCoordP4uiv(FPglTexCoordP4uiv proc, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiTexCoordP1ui)(GLenum a_texture, GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glMultiTexCoordP1ui(FPglMultiTexCoordP1ui proc, GLenum a_texture, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiTexCoordP1uiv)(GLenum a_texture, GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glMultiTexCoordP1uiv(FPglMultiTexCoordP1uiv proc, GLenum a_texture, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiTexCoordP2ui)(GLenum a_texture, GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glMultiTexCoordP2ui(FPglMultiTexCoordP2ui proc, GLenum a_texture, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiTexCoordP2uiv)(GLenum a_texture, GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glMultiTexCoordP2uiv(FPglMultiTexCoordP2uiv proc, GLenum a_texture, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiTexCoordP3ui)(GLenum a_texture, GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glMultiTexCoordP3ui(FPglMultiTexCoordP3ui proc, GLenum a_texture, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiTexCoordP3uiv)(GLenum a_texture, GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glMultiTexCoordP3uiv(FPglMultiTexCoordP3uiv proc, GLenum a_texture, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiTexCoordP4ui)(GLenum a_texture, GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glMultiTexCoordP4ui(FPglMultiTexCoordP4ui proc, GLenum a_texture, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglMultiTexCoordP4uiv)(GLenum a_texture, GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glMultiTexCoordP4uiv(FPglMultiTexCoordP4uiv proc, GLenum a_texture, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglNormalP3ui)(GLenum a_type, GLuint a_coords);
_GLTRACER_API void GLTrace_glNormalP3ui(FPglNormalP3ui proc, GLenum a_type, GLuint a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglNormalP3uiv)(GLenum a_type, const GLuint * a_coords);
_GLTRACER_API void GLTrace_glNormalP3uiv(FPglNormalP3uiv proc, GLenum a_type, const GLuint * a_coords, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglColorP3ui)(GLenum a_type, GLuint a_color);
_GLTRACER_API void GLTrace_glColorP3ui(FPglColorP3ui proc, GLenum a_type, GLuint a_color, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglColorP3uiv)(GLenum a_type, const GLuint * a_color);
_GLTRACER_API void GLTrace_glColorP3uiv(FPglColorP3uiv proc, GLenum a_type, const GLuint * a_color, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglColorP4ui)(GLenum a_type, GLuint a_color);
_GLTRACER_API void GLTrace_glColorP4ui(FPglColorP4ui proc, GLenum a_type, GLuint a_color, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglColorP4uiv)(GLenum a_type, const GLuint * a_color);
_GLTRACER_API void GLTrace_glColorP4uiv(FPglColorP4uiv proc, GLenum a_type, const GLuint * a_color, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSecondaryColorP3ui)(GLenum a_type, GLuint a_color);
_GLTRACER_API void GLTrace_glSecondaryColorP3ui(FPglSecondaryColorP3ui proc, GLenum a_type, GLuint a_color, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglSecondaryColorP3uiv)(GLenum a_type, const GLuint * a_color);
_GLTRACER_API void GLTrace_glSecondaryColorP3uiv(FPglSecondaryColorP3uiv proc, GLenum a_type, const GLuint * a_color, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribP1ui)(GLuint a_index, GLenum a_type, GLboolean a_normalized, GLuint a_value);
_GLTRACER_API void GLTrace_glVertexAttribP1ui(FPglVertexAttribP1ui proc, GLuint a_index, GLenum a_type, GLboolean a_normalized, GLuint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribP1uiv)(GLuint a_index, GLenum a_type, GLboolean a_normalized, const GLuint * a_value);
_GLTRACER_API void GLTrace_glVertexAttribP1uiv(FPglVertexAttribP1uiv proc, GLuint a_index, GLenum a_type, GLboolean a_normalized, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribP2ui)(GLuint a_index, GLenum a_type, GLboolean a_normalized, GLuint a_value);
_GLTRACER_API void GLTrace_glVertexAttribP2ui(FPglVertexAttribP2ui proc, GLuint a_index, GLenum a_type, GLboolean a_normalized, GLuint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribP2uiv)(GLuint a_index, GLenum a_type, GLboolean a_normalized, const GLuint * a_value);
_GLTRACER_API void GLTrace_glVertexAttribP2uiv(FPglVertexAttribP2uiv proc, GLuint a_index, GLenum a_type, GLboolean a_normalized, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribP3ui)(GLuint a_index, GLenum a_type, GLboolean a_normalized, GLuint a_value);
_GLTRACER_API void GLTrace_glVertexAttribP3ui(FPglVertexAttribP3ui proc, GLuint a_index, GLenum a_type, GLboolean a_normalized, GLuint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribP3uiv)(GLuint a_index, GLenum a_type, GLboolean a_normalized, const GLuint * a_value);
_GLTRACER_API void GLTrace_glVertexAttribP3uiv(FPglVertexAttribP3uiv proc, GLuint a_index, GLenum a_type, GLboolean a_normalized, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribP4ui)(GLuint a_index, GLenum a_type, GLboolean a_normalized, GLuint a_value);
_GLTRACER_API void GLTrace_glVertexAttribP4ui(FPglVertexAttribP4ui proc, GLuint a_index, GLenum a_type, GLboolean a_normalized, GLuint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribP4uiv)(GLuint a_index, GLenum a_type, GLboolean a_normalized, const GLuint * a_value);
_GLTRACER_API void GLTrace_glVertexAttribP4uiv(FPglVertexAttribP4uiv proc, GLuint a_index, GLenum a_type, GLboolean a_normalized, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawArraysIndirect)(GLenum a_mode, const GLvoid * a_indirect);
_GLTRACER_API void GLTrace_glDrawArraysIndirect(FPglDrawArraysIndirect proc, GLenum a_mode, const GLvoid * a_indirect, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawElementsIndirect)(GLenum a_mode, GLenum a_type, const GLvoid * a_indirect);
_GLTRACER_API void GLTrace_glDrawElementsIndirect(FPglDrawElementsIndirect proc, GLenum a_mode, GLenum a_type, const GLvoid * a_indirect, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform1d)(GLint a_location, GLdouble a_x);
_GLTRACER_API void GLTrace_glUniform1d(FPglUniform1d proc, GLint a_location, GLdouble a_x, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform2d)(GLint a_location, GLdouble a_x, GLdouble a_y);
_GLTRACER_API void GLTrace_glUniform2d(FPglUniform2d proc, GLint a_location, GLdouble a_x, GLdouble a_y, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform3d)(GLint a_location, GLdouble a_x, GLdouble a_y, GLdouble a_z);
_GLTRACER_API void GLTrace_glUniform3d(FPglUniform3d proc, GLint a_location, GLdouble a_x, GLdouble a_y, GLdouble a_z, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform4d)(GLint a_location, GLdouble a_x, GLdouble a_y, GLdouble a_z, GLdouble a_w);
_GLTRACER_API void GLTrace_glUniform4d(FPglUniform4d proc, GLint a_location, GLdouble a_x, GLdouble a_y, GLdouble a_z, GLdouble a_w, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform1dv)(GLint a_location, GLsizei a_count, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniform1dv(FPglUniform1dv proc, GLint a_location, GLsizei a_count, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform2dv)(GLint a_location, GLsizei a_count, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniform2dv(FPglUniform2dv proc, GLint a_location, GLsizei a_count, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform3dv)(GLint a_location, GLsizei a_count, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniform3dv(FPglUniform3dv proc, GLint a_location, GLsizei a_count, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniform4dv)(GLint a_location, GLsizei a_count, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniform4dv(FPglUniform4dv proc, GLint a_location, GLsizei a_count, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix2dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix2dv(FPglUniformMatrix2dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix3dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix3dv(FPglUniformMatrix3dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix4dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix4dv(FPglUniformMatrix4dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix2x3dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix2x3dv(FPglUniformMatrix2x3dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix2x4dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix2x4dv(FPglUniformMatrix2x4dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix3x2dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix3x2dv(FPglUniformMatrix3x2dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix3x4dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix3x4dv(FPglUniformMatrix3x4dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix4x2dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix4x2dv(FPglUniformMatrix4x2dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformMatrix4x3dv)(GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glUniformMatrix4x3dv(FPglUniformMatrix4x3dv proc, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetUniformdv)(GLuint a_program, GLint a_location, GLdouble * a_params);
_GLTRACER_API void GLTrace_glGetUniformdv(FPglGetUniformdv proc, GLuint a_program, GLint a_location, GLdouble * a_params, const char* fileName, unsigned int lineNum);
typedef GLint (APIENTRY* FPglGetSubroutineUniformLocation)(GLuint a_program, GLenum a_shadertype, const GLchar * a_name);
_GLTRACER_API GLint GLTrace_glGetSubroutineUniformLocation(FPglGetSubroutineUniformLocation proc, GLuint a_program, GLenum a_shadertype, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef GLuint (APIENTRY* FPglGetSubroutineIndex)(GLuint a_program, GLenum a_shadertype, const GLchar * a_name);
_GLTRACER_API GLuint GLTrace_glGetSubroutineIndex(FPglGetSubroutineIndex proc, GLuint a_program, GLenum a_shadertype, const GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveSubroutineUniformiv)(GLuint a_program, GLenum a_shadertype, GLuint a_index, GLenum a_pname, GLint * a_values);
_GLTRACER_API void GLTrace_glGetActiveSubroutineUniformiv(FPglGetActiveSubroutineUniformiv proc, GLuint a_program, GLenum a_shadertype, GLuint a_index, GLenum a_pname, GLint * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveSubroutineUniformName)(GLuint a_program, GLenum a_shadertype, GLuint a_index, GLsizei a_bufsize, GLsizei * a_length, GLchar * a_name);
_GLTRACER_API void GLTrace_glGetActiveSubroutineUniformName(FPglGetActiveSubroutineUniformName proc, GLuint a_program, GLenum a_shadertype, GLuint a_index, GLsizei a_bufsize, GLsizei * a_length, GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetActiveSubroutineName)(GLuint a_program, GLenum a_shadertype, GLuint a_index, GLsizei a_bufsize, GLsizei * a_length, GLchar * a_name);
_GLTRACER_API void GLTrace_glGetActiveSubroutineName(FPglGetActiveSubroutineName proc, GLuint a_program, GLenum a_shadertype, GLuint a_index, GLsizei a_bufsize, GLsizei * a_length, GLchar * a_name, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUniformSubroutinesuiv)(GLenum a_shadertype, GLsizei a_count, const GLuint * a_indices);
_GLTRACER_API void GLTrace_glUniformSubroutinesuiv(FPglUniformSubroutinesuiv proc, GLenum a_shadertype, GLsizei a_count, const GLuint * a_indices, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetUniformSubroutineuiv)(GLenum a_shadertype, GLint a_location, GLuint * a_params);
_GLTRACER_API void GLTrace_glGetUniformSubroutineuiv(FPglGetUniformSubroutineuiv proc, GLenum a_shadertype, GLint a_location, GLuint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetProgramStageiv)(GLuint a_program, GLenum a_shadertype, GLenum a_pname, GLint * a_values);
_GLTRACER_API void GLTrace_glGetProgramStageiv(FPglGetProgramStageiv proc, GLuint a_program, GLenum a_shadertype, GLenum a_pname, GLint * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPatchParameteri)(GLenum a_pname, GLint a_value);
_GLTRACER_API void GLTrace_glPatchParameteri(FPglPatchParameteri proc, GLenum a_pname, GLint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPatchParameterfv)(GLenum a_pname, const GLfloat * a_values);
_GLTRACER_API void GLTrace_glPatchParameterfv(FPglPatchParameterfv proc, GLenum a_pname, const GLfloat * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindTransformFeedback)(GLenum a_target, GLuint a_id);
_GLTRACER_API void GLTrace_glBindTransformFeedback(FPglBindTransformFeedback proc, GLenum a_target, GLuint a_id, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteTransformFeedbacks)(GLsizei a_n, const GLuint * a_ids);
_GLTRACER_API void GLTrace_glDeleteTransformFeedbacks(FPglDeleteTransformFeedbacks proc, GLsizei a_n, const GLuint * a_ids, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenTransformFeedbacks)(GLsizei a_n, GLuint * a_ids);
_GLTRACER_API void GLTrace_glGenTransformFeedbacks(FPglGenTransformFeedbacks proc, GLsizei a_n, GLuint * a_ids, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsTransformFeedback)(GLuint a_id);
_GLTRACER_API GLboolean GLTrace_glIsTransformFeedback(FPglIsTransformFeedback proc, GLuint a_id, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglPauseTransformFeedback)();
_GLTRACER_API void GLTrace_glPauseTransformFeedback(FPglPauseTransformFeedback proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglResumeTransformFeedback)();
_GLTRACER_API void GLTrace_glResumeTransformFeedback(FPglResumeTransformFeedback proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawTransformFeedback)(GLenum a_mode, GLuint a_id);
_GLTRACER_API void GLTrace_glDrawTransformFeedback(FPglDrawTransformFeedback proc, GLenum a_mode, GLuint a_id, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDrawTransformFeedbackStream)(GLenum a_mode, GLuint a_id, GLuint a_stream);
_GLTRACER_API void GLTrace_glDrawTransformFeedbackStream(FPglDrawTransformFeedbackStream proc, GLenum a_mode, GLuint a_id, GLuint a_stream, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBeginQueryIndexed)(GLenum a_target, GLuint a_index, GLuint a_id);
_GLTRACER_API void GLTrace_glBeginQueryIndexed(FPglBeginQueryIndexed proc, GLenum a_target, GLuint a_index, GLuint a_id, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglEndQueryIndexed)(GLenum a_target, GLuint a_index);
_GLTRACER_API void GLTrace_glEndQueryIndexed(FPglEndQueryIndexed proc, GLenum a_target, GLuint a_index, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetQueryIndexediv)(GLenum a_target, GLuint a_index, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetQueryIndexediv(FPglGetQueryIndexediv proc, GLenum a_target, GLuint a_index, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglReleaseShaderCompiler)();
_GLTRACER_API void GLTrace_glReleaseShaderCompiler(FPglReleaseShaderCompiler proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglShaderBinary)(GLsizei a_count, const GLuint * a_shaders, GLenum a_binaryformat, const GLvoid * a_binary, GLsizei a_length);
_GLTRACER_API void GLTrace_glShaderBinary(FPglShaderBinary proc, GLsizei a_count, const GLuint * a_shaders, GLenum a_binaryformat, const GLvoid * a_binary, GLsizei a_length, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetShaderPrecisionFormat)(GLenum a_shadertype, GLenum a_precisiontype, GLint * a_range, GLint * a_precision);
_GLTRACER_API void GLTrace_glGetShaderPrecisionFormat(FPglGetShaderPrecisionFormat proc, GLenum a_shadertype, GLenum a_precisiontype, GLint * a_range, GLint * a_precision, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDepthRangef)(GLclampf a_n, GLclampf a_f);
_GLTRACER_API void GLTrace_glDepthRangef(FPglDepthRangef proc, GLclampf a_n, GLclampf a_f, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglClearDepthf)(GLclampf a_d);
_GLTRACER_API void GLTrace_glClearDepthf(FPglClearDepthf proc, GLclampf a_d, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetProgramBinary)(GLuint a_program, GLsizei a_bufSize, GLsizei * a_length, GLenum * a_binaryFormat, GLvoid * a_binary);
_GLTRACER_API void GLTrace_glGetProgramBinary(FPglGetProgramBinary proc, GLuint a_program, GLsizei a_bufSize, GLsizei * a_length, GLenum * a_binaryFormat, GLvoid * a_binary, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramBinary)(GLuint a_program, GLenum a_binaryFormat, const GLvoid * a_binary, GLsizei a_length);
_GLTRACER_API void GLTrace_glProgramBinary(FPglProgramBinary proc, GLuint a_program, GLenum a_binaryFormat, const GLvoid * a_binary, GLsizei a_length, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramParameteri)(GLuint a_program, GLenum a_pname, GLint a_value);
_GLTRACER_API void GLTrace_glProgramParameteri(FPglProgramParameteri proc, GLuint a_program, GLenum a_pname, GLint a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglUseProgramStages)(GLuint a_pipeline, GLbitfield a_stages, GLuint a_program);
_GLTRACER_API void GLTrace_glUseProgramStages(FPglUseProgramStages proc, GLuint a_pipeline, GLbitfield a_stages, GLuint a_program, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglActiveShaderProgram)(GLuint a_pipeline, GLuint a_program);
_GLTRACER_API void GLTrace_glActiveShaderProgram(FPglActiveShaderProgram proc, GLuint a_pipeline, GLuint a_program, const char* fileName, unsigned int lineNum);
typedef GLuint (APIENTRY* FPglCreateShaderProgramv)(GLenum a_type, GLsizei a_count, const GLchar* * a_strings);
_GLTRACER_API GLuint GLTrace_glCreateShaderProgramv(FPglCreateShaderProgramv proc, GLenum a_type, GLsizei a_count, const GLchar* * a_strings, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglBindProgramPipeline)(GLuint a_pipeline);
_GLTRACER_API void GLTrace_glBindProgramPipeline(FPglBindProgramPipeline proc, GLuint a_pipeline, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDeleteProgramPipelines)(GLsizei a_n, const GLuint * a_pipelines);
_GLTRACER_API void GLTrace_glDeleteProgramPipelines(FPglDeleteProgramPipelines proc, GLsizei a_n, const GLuint * a_pipelines, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGenProgramPipelines)(GLsizei a_n, GLuint * a_pipelines);
_GLTRACER_API void GLTrace_glGenProgramPipelines(FPglGenProgramPipelines proc, GLsizei a_n, GLuint * a_pipelines, const char* fileName, unsigned int lineNum);
typedef GLboolean (APIENTRY* FPglIsProgramPipeline)(GLuint a_pipeline);
_GLTRACER_API GLboolean GLTrace_glIsProgramPipeline(FPglIsProgramPipeline proc, GLuint a_pipeline, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetProgramPipelineiv)(GLuint a_pipeline, GLenum a_pname, GLint * a_params);
_GLTRACER_API void GLTrace_glGetProgramPipelineiv(FPglGetProgramPipelineiv proc, GLuint a_pipeline, GLenum a_pname, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform1i)(GLuint a_program, GLint a_location, GLint a_v0);
_GLTRACER_API void GLTrace_glProgramUniform1i(FPglProgramUniform1i proc, GLuint a_program, GLint a_location, GLint a_v0, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform1iv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLint * a_value);
_GLTRACER_API void GLTrace_glProgramUniform1iv(FPglProgramUniform1iv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform1f)(GLuint a_program, GLint a_location, GLfloat a_v0);
_GLTRACER_API void GLTrace_glProgramUniform1f(FPglProgramUniform1f proc, GLuint a_program, GLint a_location, GLfloat a_v0, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform1fv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniform1fv(FPglProgramUniform1fv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform1d)(GLuint a_program, GLint a_location, GLdouble a_v0);
_GLTRACER_API void GLTrace_glProgramUniform1d(FPglProgramUniform1d proc, GLuint a_program, GLint a_location, GLdouble a_v0, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform1dv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniform1dv(FPglProgramUniform1dv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform1ui)(GLuint a_program, GLint a_location, GLuint a_v0);
_GLTRACER_API void GLTrace_glProgramUniform1ui(FPglProgramUniform1ui proc, GLuint a_program, GLint a_location, GLuint a_v0, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform1uiv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLuint * a_value);
_GLTRACER_API void GLTrace_glProgramUniform1uiv(FPglProgramUniform1uiv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform2i)(GLuint a_program, GLint a_location, GLint a_v0, GLint a_v1);
_GLTRACER_API void GLTrace_glProgramUniform2i(FPglProgramUniform2i proc, GLuint a_program, GLint a_location, GLint a_v0, GLint a_v1, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform2iv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLint * a_value);
_GLTRACER_API void GLTrace_glProgramUniform2iv(FPglProgramUniform2iv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform2f)(GLuint a_program, GLint a_location, GLfloat a_v0, GLfloat a_v1);
_GLTRACER_API void GLTrace_glProgramUniform2f(FPglProgramUniform2f proc, GLuint a_program, GLint a_location, GLfloat a_v0, GLfloat a_v1, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform2fv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniform2fv(FPglProgramUniform2fv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform2d)(GLuint a_program, GLint a_location, GLdouble a_v0, GLdouble a_v1);
_GLTRACER_API void GLTrace_glProgramUniform2d(FPglProgramUniform2d proc, GLuint a_program, GLint a_location, GLdouble a_v0, GLdouble a_v1, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform2dv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniform2dv(FPglProgramUniform2dv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform2ui)(GLuint a_program, GLint a_location, GLuint a_v0, GLuint a_v1);
_GLTRACER_API void GLTrace_glProgramUniform2ui(FPglProgramUniform2ui proc, GLuint a_program, GLint a_location, GLuint a_v0, GLuint a_v1, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform2uiv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLuint * a_value);
_GLTRACER_API void GLTrace_glProgramUniform2uiv(FPglProgramUniform2uiv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform3i)(GLuint a_program, GLint a_location, GLint a_v0, GLint a_v1, GLint a_v2);
_GLTRACER_API void GLTrace_glProgramUniform3i(FPglProgramUniform3i proc, GLuint a_program, GLint a_location, GLint a_v0, GLint a_v1, GLint a_v2, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform3iv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLint * a_value);
_GLTRACER_API void GLTrace_glProgramUniform3iv(FPglProgramUniform3iv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform3f)(GLuint a_program, GLint a_location, GLfloat a_v0, GLfloat a_v1, GLfloat a_v2);
_GLTRACER_API void GLTrace_glProgramUniform3f(FPglProgramUniform3f proc, GLuint a_program, GLint a_location, GLfloat a_v0, GLfloat a_v1, GLfloat a_v2, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform3fv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniform3fv(FPglProgramUniform3fv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform3d)(GLuint a_program, GLint a_location, GLdouble a_v0, GLdouble a_v1, GLdouble a_v2);
_GLTRACER_API void GLTrace_glProgramUniform3d(FPglProgramUniform3d proc, GLuint a_program, GLint a_location, GLdouble a_v0, GLdouble a_v1, GLdouble a_v2, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform3dv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniform3dv(FPglProgramUniform3dv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform3ui)(GLuint a_program, GLint a_location, GLuint a_v0, GLuint a_v1, GLuint a_v2);
_GLTRACER_API void GLTrace_glProgramUniform3ui(FPglProgramUniform3ui proc, GLuint a_program, GLint a_location, GLuint a_v0, GLuint a_v1, GLuint a_v2, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform3uiv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLuint * a_value);
_GLTRACER_API void GLTrace_glProgramUniform3uiv(FPglProgramUniform3uiv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform4i)(GLuint a_program, GLint a_location, GLint a_v0, GLint a_v1, GLint a_v2, GLint a_v3);
_GLTRACER_API void GLTrace_glProgramUniform4i(FPglProgramUniform4i proc, GLuint a_program, GLint a_location, GLint a_v0, GLint a_v1, GLint a_v2, GLint a_v3, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform4iv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLint * a_value);
_GLTRACER_API void GLTrace_glProgramUniform4iv(FPglProgramUniform4iv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform4f)(GLuint a_program, GLint a_location, GLfloat a_v0, GLfloat a_v1, GLfloat a_v2, GLfloat a_v3);
_GLTRACER_API void GLTrace_glProgramUniform4f(FPglProgramUniform4f proc, GLuint a_program, GLint a_location, GLfloat a_v0, GLfloat a_v1, GLfloat a_v2, GLfloat a_v3, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform4fv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniform4fv(FPglProgramUniform4fv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform4d)(GLuint a_program, GLint a_location, GLdouble a_v0, GLdouble a_v1, GLdouble a_v2, GLdouble a_v3);
_GLTRACER_API void GLTrace_glProgramUniform4d(FPglProgramUniform4d proc, GLuint a_program, GLint a_location, GLdouble a_v0, GLdouble a_v1, GLdouble a_v2, GLdouble a_v3, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform4dv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniform4dv(FPglProgramUniform4dv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform4ui)(GLuint a_program, GLint a_location, GLuint a_v0, GLuint a_v1, GLuint a_v2, GLuint a_v3);
_GLTRACER_API void GLTrace_glProgramUniform4ui(FPglProgramUniform4ui proc, GLuint a_program, GLint a_location, GLuint a_v0, GLuint a_v1, GLuint a_v2, GLuint a_v3, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniform4uiv)(GLuint a_program, GLint a_location, GLsizei a_count, const GLuint * a_value);
_GLTRACER_API void GLTrace_glProgramUniform4uiv(FPglProgramUniform4uiv proc, GLuint a_program, GLint a_location, GLsizei a_count, const GLuint * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix2fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix2fv(FPglProgramUniformMatrix2fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix3fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix3fv(FPglProgramUniformMatrix3fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix4fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix4fv(FPglProgramUniformMatrix4fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix2dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix2dv(FPglProgramUniformMatrix2dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix3dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix3dv(FPglProgramUniformMatrix3dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix4dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix4dv(FPglProgramUniformMatrix4dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix2x3fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix2x3fv(FPglProgramUniformMatrix2x3fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix3x2fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix3x2fv(FPglProgramUniformMatrix3x2fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix2x4fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix2x4fv(FPglProgramUniformMatrix2x4fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix4x2fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix4x2fv(FPglProgramUniformMatrix4x2fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix3x4fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix3x4fv(FPglProgramUniformMatrix3x4fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix4x3fv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix4x3fv(FPglProgramUniformMatrix4x3fv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLfloat * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix2x3dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix2x3dv(FPglProgramUniformMatrix2x3dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix3x2dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix3x2dv(FPglProgramUniformMatrix3x2dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix2x4dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix2x4dv(FPglProgramUniformMatrix2x4dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix4x2dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix4x2dv(FPglProgramUniformMatrix4x2dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix3x4dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix3x4dv(FPglProgramUniformMatrix3x4dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglProgramUniformMatrix4x3dv)(GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value);
_GLTRACER_API void GLTrace_glProgramUniformMatrix4x3dv(FPglProgramUniformMatrix4x3dv proc, GLuint a_program, GLint a_location, GLsizei a_count, GLboolean a_transpose, const GLdouble * a_value, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglValidateProgramPipeline)(GLuint a_pipeline);
_GLTRACER_API void GLTrace_glValidateProgramPipeline(FPglValidateProgramPipeline proc, GLuint a_pipeline, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetProgramPipelineInfoLog)(GLuint a_pipeline, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_infoLog);
_GLTRACER_API void GLTrace_glGetProgramPipelineInfoLog(FPglGetProgramPipelineInfoLog proc, GLuint a_pipeline, GLsizei a_bufSize, GLsizei * a_length, GLchar * a_infoLog, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribL1d)(GLuint a_index, GLdouble a_x);
_GLTRACER_API void GLTrace_glVertexAttribL1d(FPglVertexAttribL1d proc, GLuint a_index, GLdouble a_x, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribL2d)(GLuint a_index, GLdouble a_x, GLdouble a_y);
_GLTRACER_API void GLTrace_glVertexAttribL2d(FPglVertexAttribL2d proc, GLuint a_index, GLdouble a_x, GLdouble a_y, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribL3d)(GLuint a_index, GLdouble a_x, GLdouble a_y, GLdouble a_z);
_GLTRACER_API void GLTrace_glVertexAttribL3d(FPglVertexAttribL3d proc, GLuint a_index, GLdouble a_x, GLdouble a_y, GLdouble a_z, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribL4d)(GLuint a_index, GLdouble a_x, GLdouble a_y, GLdouble a_z, GLdouble a_w);
_GLTRACER_API void GLTrace_glVertexAttribL4d(FPglVertexAttribL4d proc, GLuint a_index, GLdouble a_x, GLdouble a_y, GLdouble a_z, GLdouble a_w, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribL1dv)(GLuint a_index, const GLdouble * a_v);
_GLTRACER_API void GLTrace_glVertexAttribL1dv(FPglVertexAttribL1dv proc, GLuint a_index, const GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribL2dv)(GLuint a_index, const GLdouble * a_v);
_GLTRACER_API void GLTrace_glVertexAttribL2dv(FPglVertexAttribL2dv proc, GLuint a_index, const GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribL3dv)(GLuint a_index, const GLdouble * a_v);
_GLTRACER_API void GLTrace_glVertexAttribL3dv(FPglVertexAttribL3dv proc, GLuint a_index, const GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribL4dv)(GLuint a_index, const GLdouble * a_v);
_GLTRACER_API void GLTrace_glVertexAttribL4dv(FPglVertexAttribL4dv proc, GLuint a_index, const GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglVertexAttribLPointer)(GLuint a_index, GLint a_size, GLenum a_type, GLsizei a_stride, const GLvoid * a_pointer);
_GLTRACER_API void GLTrace_glVertexAttribLPointer(FPglVertexAttribLPointer proc, GLuint a_index, GLint a_size, GLenum a_type, GLsizei a_stride, const GLvoid * a_pointer, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetVertexAttribLdv)(GLuint a_index, GLenum a_pname, GLdouble * a_params);
_GLTRACER_API void GLTrace_glGetVertexAttribLdv(FPglGetVertexAttribLdv proc, GLuint a_index, GLenum a_pname, GLdouble * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglViewportArrayv)(GLuint a_first, GLsizei a_count, const GLfloat * a_v);
_GLTRACER_API void GLTrace_glViewportArrayv(FPglViewportArrayv proc, GLuint a_first, GLsizei a_count, const GLfloat * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglViewportIndexedf)(GLuint a_index, GLfloat a_x, GLfloat a_y, GLfloat a_w, GLfloat a_h);
_GLTRACER_API void GLTrace_glViewportIndexedf(FPglViewportIndexedf proc, GLuint a_index, GLfloat a_x, GLfloat a_y, GLfloat a_w, GLfloat a_h, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglViewportIndexedfv)(GLuint a_index, const GLfloat * a_v);
_GLTRACER_API void GLTrace_glViewportIndexedfv(FPglViewportIndexedfv proc, GLuint a_index, const GLfloat * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglScissorArrayv)(GLuint a_first, GLsizei a_count, const GLint * a_v);
_GLTRACER_API void GLTrace_glScissorArrayv(FPglScissorArrayv proc, GLuint a_first, GLsizei a_count, const GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglScissorIndexed)(GLuint a_index, GLint a_left, GLint a_bottom, GLsizei a_width, GLsizei a_height);
_GLTRACER_API void GLTrace_glScissorIndexed(FPglScissorIndexed proc, GLuint a_index, GLint a_left, GLint a_bottom, GLsizei a_width, GLsizei a_height, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglScissorIndexedv)(GLuint a_index, const GLint * a_v);
_GLTRACER_API void GLTrace_glScissorIndexedv(FPglScissorIndexedv proc, GLuint a_index, const GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDepthRangeArrayv)(GLuint a_first, GLsizei a_count, const GLclampd * a_v);
_GLTRACER_API void GLTrace_glDepthRangeArrayv(FPglDepthRangeArrayv proc, GLuint a_first, GLsizei a_count, const GLclampd * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDepthRangeIndexed)(GLuint a_index, GLclampd a_n, GLclampd a_f);
_GLTRACER_API void GLTrace_glDepthRangeIndexed(FPglDepthRangeIndexed proc, GLuint a_index, GLclampd a_n, GLclampd a_f, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetFloati_v)(GLenum a_target, GLuint a_index, GLfloat * a_data);
_GLTRACER_API void GLTrace_glGetFloati_v(FPglGetFloati_v proc, GLenum a_target, GLuint a_index, GLfloat * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetDoublei_v)(GLenum a_target, GLuint a_index, GLdouble * a_data);
_GLTRACER_API void GLTrace_glGetDoublei_v(FPglGetDoublei_v proc, GLenum a_target, GLuint a_index, GLdouble * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDebugMessageControlARB)(GLenum a_source, GLenum a_type, GLenum a_severity, GLsizei a_count, const GLuint * a_ids, GLboolean a_enabled);
_GLTRACER_API void GLTrace_glDebugMessageControlARB(FPglDebugMessageControlARB proc, GLenum a_source, GLenum a_type, GLenum a_severity, GLsizei a_count, const GLuint * a_ids, GLboolean a_enabled, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDebugMessageInsertARB)(GLenum a_source, GLenum a_type, GLuint a_id, GLenum a_severity, GLsizei a_length, const GLchar * a_buf);
_GLTRACER_API void GLTrace_glDebugMessageInsertARB(FPglDebugMessageInsertARB proc, GLenum a_source, GLenum a_type, GLuint a_id, GLenum a_severity, GLsizei a_length, const GLchar * a_buf, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglDebugMessageCallbackARB)(GLDEBUGPROCARB a_callback, const GLvoid * a_userParam);
_GLTRACER_API void GLTrace_glDebugMessageCallbackARB(FPglDebugMessageCallbackARB proc, GLDEBUGPROCARB a_callback, const GLvoid * a_userParam, const char* fileName, unsigned int lineNum);
typedef GLuint (APIENTRY* FPglGetDebugMessageLogARB)(GLuint a_count, GLsizei a_bufsize, GLenum * a_sources, GLenum * a_types, GLuint * a_ids, GLenum * a_severities, GLsizei * a_lengths, GLchar * a_messageLog);
_GLTRACER_API GLuint GLTrace_glGetDebugMessageLogARB(FPglGetDebugMessageLogARB proc, GLuint a_count, GLsizei a_bufsize, GLenum * a_sources, GLenum * a_types, GLuint * a_ids, GLenum * a_severities, GLsizei * a_lengths, GLchar * a_messageLog, const char* fileName, unsigned int lineNum);
typedef GLenum (APIENTRY* FPglGetGraphicsResetStatusARB)();
_GLTRACER_API GLenum GLTrace_glGetGraphicsResetStatusARB(FPglGetGraphicsResetStatusARB proc, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnMapdvARB)(GLenum a_target, GLenum a_query, GLsizei a_bufSize, GLdouble * a_v);
_GLTRACER_API void GLTrace_glGetnMapdvARB(FPglGetnMapdvARB proc, GLenum a_target, GLenum a_query, GLsizei a_bufSize, GLdouble * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnMapfvARB)(GLenum a_target, GLenum a_query, GLsizei a_bufSize, GLfloat * a_v);
_GLTRACER_API void GLTrace_glGetnMapfvARB(FPglGetnMapfvARB proc, GLenum a_target, GLenum a_query, GLsizei a_bufSize, GLfloat * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnMapivARB)(GLenum a_target, GLenum a_query, GLsizei a_bufSize, GLint * a_v);
_GLTRACER_API void GLTrace_glGetnMapivARB(FPglGetnMapivARB proc, GLenum a_target, GLenum a_query, GLsizei a_bufSize, GLint * a_v, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnPixelMapfvARB)(GLenum a_map, GLsizei a_bufSize, GLfloat * a_values);
_GLTRACER_API void GLTrace_glGetnPixelMapfvARB(FPglGetnPixelMapfvARB proc, GLenum a_map, GLsizei a_bufSize, GLfloat * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnPixelMapuivARB)(GLenum a_map, GLsizei a_bufSize, GLuint * a_values);
_GLTRACER_API void GLTrace_glGetnPixelMapuivARB(FPglGetnPixelMapuivARB proc, GLenum a_map, GLsizei a_bufSize, GLuint * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnPixelMapusvARB)(GLenum a_map, GLsizei a_bufSize, GLushort * a_values);
_GLTRACER_API void GLTrace_glGetnPixelMapusvARB(FPglGetnPixelMapusvARB proc, GLenum a_map, GLsizei a_bufSize, GLushort * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnPolygonStippleARB)(GLsizei a_bufSize, GLubyte * a_pattern);
_GLTRACER_API void GLTrace_glGetnPolygonStippleARB(FPglGetnPolygonStippleARB proc, GLsizei a_bufSize, GLubyte * a_pattern, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnColorTableARB)(GLenum a_target, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_table);
_GLTRACER_API void GLTrace_glGetnColorTableARB(FPglGetnColorTableARB proc, GLenum a_target, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_table, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnConvolutionFilterARB)(GLenum a_target, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_image);
_GLTRACER_API void GLTrace_glGetnConvolutionFilterARB(FPglGetnConvolutionFilterARB proc, GLenum a_target, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_image, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnSeparableFilterARB)(GLenum a_target, GLenum a_format, GLenum a_type, GLsizei a_rowBufSize, GLvoid * a_row, GLsizei a_columnBufSize, GLvoid * a_column, GLvoid * a_span);
_GLTRACER_API void GLTrace_glGetnSeparableFilterARB(FPglGetnSeparableFilterARB proc, GLenum a_target, GLenum a_format, GLenum a_type, GLsizei a_rowBufSize, GLvoid * a_row, GLsizei a_columnBufSize, GLvoid * a_column, GLvoid * a_span, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnHistogramARB)(GLenum a_target, GLboolean a_reset, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_values);
_GLTRACER_API void GLTrace_glGetnHistogramARB(FPglGetnHistogramARB proc, GLenum a_target, GLboolean a_reset, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnMinmaxARB)(GLenum a_target, GLboolean a_reset, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_values);
_GLTRACER_API void GLTrace_glGetnMinmaxARB(FPglGetnMinmaxARB proc, GLenum a_target, GLboolean a_reset, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_values, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnTexImageARB)(GLenum a_target, GLint a_level, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_img);
_GLTRACER_API void GLTrace_glGetnTexImageARB(FPglGetnTexImageARB proc, GLenum a_target, GLint a_level, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_img, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglReadnPixelsARB)(GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_data);
_GLTRACER_API void GLTrace_glReadnPixelsARB(FPglReadnPixelsARB proc, GLint a_x, GLint a_y, GLsizei a_width, GLsizei a_height, GLenum a_format, GLenum a_type, GLsizei a_bufSize, GLvoid * a_data, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnCompressedTexImageARB)(GLenum a_target, GLint a_lod, GLsizei a_bufSize, GLvoid * a_img);
_GLTRACER_API void GLTrace_glGetnCompressedTexImageARB(FPglGetnCompressedTexImageARB proc, GLenum a_target, GLint a_lod, GLsizei a_bufSize, GLvoid * a_img, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnUniformfvARB)(GLuint a_program, GLint a_location, GLsizei a_bufSize, GLfloat * a_params);
_GLTRACER_API void GLTrace_glGetnUniformfvARB(FPglGetnUniformfvARB proc, GLuint a_program, GLint a_location, GLsizei a_bufSize, GLfloat * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnUniformivARB)(GLuint a_program, GLint a_location, GLsizei a_bufSize, GLint * a_params);
_GLTRACER_API void GLTrace_glGetnUniformivARB(FPglGetnUniformivARB proc, GLuint a_program, GLint a_location, GLsizei a_bufSize, GLint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnUniformuivARB)(GLuint a_program, GLint a_location, GLsizei a_bufSize, GLuint * a_params);
_GLTRACER_API void GLTrace_glGetnUniformuivARB(FPglGetnUniformuivARB proc, GLuint a_program, GLint a_location, GLsizei a_bufSize, GLuint * a_params, const char* fileName, unsigned int lineNum);
typedef void (APIENTRY* FPglGetnUniformdvARB)(GLuint a_program, GLint a_location, GLsizei a_bufSize, GLdouble * a_params);
_GLTRACER_API void GLTrace_glGetnUniformdvARB(FPglGetnUniformdvARB proc, GLuint a_program, GLint a_location, GLsizei a_bufSize, GLdouble * a_params, const char* fileName, unsigned int lineNum);
